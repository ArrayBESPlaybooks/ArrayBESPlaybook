{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"styleguide/","text":"Styleguide Headers The spectacle before us was indeed sublime The spectacle before us was indeed sublime The spectacle before us was indeed sublime The spectacle before us was indeed sublime Apparently we had reached a great height in the atmosphere, for the sky was a dead black, and the stars had ceased to twinkle. By the same illusion which lifts the horizon of the sea to the level of the spectator on a hillside, the sable cloud beneath was dished out, and the car seemed to float in the middle of an immense dark sphere, whose upper half was strewn with silver. Looking down into the dark gulf below, I could see a ruddy light streaming through a rift in the clouds. Lists Unordered Lists Apple Orange Banana Grape Ordered List Lion Tiger Leopard Cheetah","title":"Styleguide"},{"location":"styleguide/#styleguide","text":"","title":"Styleguide"},{"location":"styleguide/#headers","text":"","title":"Headers"},{"location":"styleguide/#the-spectacle-before-us-was-indeed-sublime","text":"","title":"The spectacle before us was indeed sublime"},{"location":"styleguide/#the-spectacle-before-us-was-indeed-sublime_1","text":"","title":"The spectacle before us was indeed sublime"},{"location":"styleguide/#the-spectacle-before-us-was-indeed-sublime_2","text":"","title":"The spectacle before us was indeed sublime"},{"location":"styleguide/#the-spectacle-before-us-was-indeed-sublime_3","text":"Apparently we had reached a great height in the atmosphere, for the sky was a dead black, and the stars had ceased to twinkle. By the same illusion which lifts the horizon of the sea to the level of the spectator on a hillside, the sable cloud beneath was dished out, and the car seemed to float in the middle of an immense dark sphere, whose upper half was strewn with silver. Looking down into the dark gulf below, I could see a ruddy light streaming through a rift in the clouds.","title":"The spectacle before us was indeed sublime"},{"location":"styleguide/#lists","text":"Unordered Lists Apple Orange Banana Grape Ordered List Lion Tiger Leopard Cheetah","title":"Lists"},{"location":"testing/1-1-testing/","text":"Automated Testing","title":"1. Overview"},{"location":"testing/1-1-testing/#automated-testing","text":"","title":"Automated Testing"},{"location":"ux/1-1-purpose/","text":"1.1 Purpose This User Experience Playbook is a continuation of effort by the BES PEO to establish modern practices and methods to accelerate software development and deployment of value for Logistics Information Systems and its end users. Preceded by playbooks for Agile and Automated Testing, the User Experience playbook aims to define a framework for how to plan and structure projects to include User Experience (UX) in both Agile and Waterfall environments, describing each stage of the process including key activities and deliverables as well as their benefits. Furthermore, this playbook aims to establish core User Experience design principles unique to the mission of Logistics Information Systems, as well as Web and Component Design Standards to create a more unified and consistent digital presence while enabling more rapid planning and deployment of future digital initiatives. These Web and Component Design Standards will include guidelines for typography, color and other style parameters in addition to reusable design patterns for common components such as navigation, buttons, alerts and form controls. The User Experience Playbook will serve as a \u201cliving document,\u201d delivering value in the present while providing a foundation for future updates and enhancements as the state of technology and the needs of stakeholders and users served by Logistics Information Systems continually evolve. For those seeking further resources and materials to help you advance along the path the understanding User Experience practices and methods, please see the Resources page within the Appendix.","title":"1.1 Purpose"},{"location":"ux/1-1-purpose/#11-purpose","text":"This User Experience Playbook is a continuation of effort by the BES PEO to establish modern practices and methods to accelerate software development and deployment of value for Logistics Information Systems and its end users. Preceded by playbooks for Agile and Automated Testing, the User Experience playbook aims to define a framework for how to plan and structure projects to include User Experience (UX) in both Agile and Waterfall environments, describing each stage of the process including key activities and deliverables as well as their benefits. Furthermore, this playbook aims to establish core User Experience design principles unique to the mission of Logistics Information Systems, as well as Web and Component Design Standards to create a more unified and consistent digital presence while enabling more rapid planning and deployment of future digital initiatives. These Web and Component Design Standards will include guidelines for typography, color and other style parameters in addition to reusable design patterns for common components such as navigation, buttons, alerts and form controls. The User Experience Playbook will serve as a \u201cliving document,\u201d delivering value in the present while providing a foundation for future updates and enhancements as the state of technology and the needs of stakeholders and users served by Logistics Information Systems continually evolve. For those seeking further resources and materials to help you advance along the path the understanding User Experience practices and methods, please see the Resources page within the Appendix.","title":"1.1 Purpose"},{"location":"ux/1-2-audience/","text":"1.2 Audience While this playbook can provide value to all personnel involved in a software development project, the primary audience for this playbook are those individuals who are responsible for the planning, management and development of projects that employ or might benefit from User Experience methodologies. For program managers and those in similar roles, this playbook will provide a foundation of knowledge to enable more effective planning and support for programs where User Experience methodologies might be employed. It will also establish a framework by which the quality and effectiveness of Logistics Information Systems\u2019 digital experiences can be evaluated. For software engineers and those in similar roles, this playbook will provide a valuable resource for design patterns and guidelines from which new digital experiences can be created, enabling faster design decisions and more rapid deployment while ensuring consistency and quality across all digital experiences delivered by Logistics Information Systems. For software development project teams as a whole, this playbook will help establish key concepts and methods that will enable more consistent delivery of solutions that meet the needs of end users and the broader organization. These operational benefits will translate to a more efficient and effective workforce, equipped with digital tools that reliably enhance their ability to achieve mission-critical goals.","title":"1.2 Audience"},{"location":"ux/1-2-audience/#12-audience","text":"While this playbook can provide value to all personnel involved in a software development project, the primary audience for this playbook are those individuals who are responsible for the planning, management and development of projects that employ or might benefit from User Experience methodologies. For program managers and those in similar roles, this playbook will provide a foundation of knowledge to enable more effective planning and support for programs where User Experience methodologies might be employed. It will also establish a framework by which the quality and effectiveness of Logistics Information Systems\u2019 digital experiences can be evaluated. For software engineers and those in similar roles, this playbook will provide a valuable resource for design patterns and guidelines from which new digital experiences can be created, enabling faster design decisions and more rapid deployment while ensuring consistency and quality across all digital experiences delivered by Logistics Information Systems. For software development project teams as a whole, this playbook will help establish key concepts and methods that will enable more consistent delivery of solutions that meet the needs of end users and the broader organization. These operational benefits will translate to a more efficient and effective workforce, equipped with digital tools that reliably enhance their ability to achieve mission-critical goals.","title":"1.2 Audience"},{"location":"ux/1-3-benefits/","text":"1.3 Benefits of UX While a number of disciplines have long paved the way for User Experience \u2013 including cognitive psychology, library science and human-computer interaction (HCI) \u2013 the need for organizations to create and adopt this unique discipline arose at the outset of the internet era as society became increasingly dependent on user interfaces to facilitate daily tasks. The aim of this new discipline was to establish more reliable practices and methods to deliver user-centered software solutions, putting aside biases in the way project teams imagine user needs to create a more firm foundation of evidence upon which to base design decisions. The practices and methods offered by the User Experience discipline ultimately help create greater efficiency on the project team while promoting greater effectiveness and satisfaction among end users. Studies consistently reinforce these benefits. A frequently cited report by IEEE states that: 70% of projects fail due to lack of user acceptance Investment in User Experience results in 33\u201350% reduced development time by having better upfront definition of requirements and avoiding rework Every dollar invested in UX brings 100 dollars in return Among the most common factors for project failure are: Unrealistic or unarticulated project goals Inaccurate estimates of needed resources Badly defined system requirements\u00b4 Poor communication among customers, developers and users Inability to handle the project\u2019s complexity User Experience is the key to addressing many of these factors. A well-defined User Experience process can help to establish and clarify project goals, balancing the needs of the people and organizations that stand to benefit most from digital products. The process also helps validate and refine system requirements by facilitating their analysis through the lens of user value, organizational value and complexity, identifying and resolving areas of ambiguity prior to the initiation of development cycles. These benefits leads to stronger project plans, better estimation and increased chances for project success. The USAF is unique in its challenges and opportunities as they relate to incorporating User Experience practices and methods within its daily operations. The USAF became reliant on technology systems far in advance of the general public, and many of those early systems were deployed at a larger scale than comparable commercial systems. In addition, these software systems support highly mission-critical operations where effectiveness cannot be compromised. This makes the effort associated with updating legacy systems and modernizing practices much more challenging and sensitive than are typically found. However these factors also reinforce the need to make these changes, taking advantage of better technological capabilities and User Experience practices that yield greater effectiveness across the organization and its workforce, ensuring greater success and reliability for these mission-critical operations. References Why Software Fails - IEEE","title":"1.3 Benefits of UX"},{"location":"ux/1-3-benefits/#13-benefits-of-ux","text":"While a number of disciplines have long paved the way for User Experience \u2013 including cognitive psychology, library science and human-computer interaction (HCI) \u2013 the need for organizations to create and adopt this unique discipline arose at the outset of the internet era as society became increasingly dependent on user interfaces to facilitate daily tasks. The aim of this new discipline was to establish more reliable practices and methods to deliver user-centered software solutions, putting aside biases in the way project teams imagine user needs to create a more firm foundation of evidence upon which to base design decisions. The practices and methods offered by the User Experience discipline ultimately help create greater efficiency on the project team while promoting greater effectiveness and satisfaction among end users. Studies consistently reinforce these benefits. A frequently cited report by IEEE states that: 70% of projects fail due to lack of user acceptance Investment in User Experience results in 33\u201350% reduced development time by having better upfront definition of requirements and avoiding rework Every dollar invested in UX brings 100 dollars in return Among the most common factors for project failure are: Unrealistic or unarticulated project goals Inaccurate estimates of needed resources Badly defined system requirements\u00b4 Poor communication among customers, developers and users Inability to handle the project\u2019s complexity User Experience is the key to addressing many of these factors. A well-defined User Experience process can help to establish and clarify project goals, balancing the needs of the people and organizations that stand to benefit most from digital products. The process also helps validate and refine system requirements by facilitating their analysis through the lens of user value, organizational value and complexity, identifying and resolving areas of ambiguity prior to the initiation of development cycles. These benefits leads to stronger project plans, better estimation and increased chances for project success. The USAF is unique in its challenges and opportunities as they relate to incorporating User Experience practices and methods within its daily operations. The USAF became reliant on technology systems far in advance of the general public, and many of those early systems were deployed at a larger scale than comparable commercial systems. In addition, these software systems support highly mission-critical operations where effectiveness cannot be compromised. This makes the effort associated with updating legacy systems and modernizing practices much more challenging and sensitive than are typically found. However these factors also reinforce the need to make these changes, taking advantage of better technological capabilities and User Experience practices that yield greater effectiveness across the organization and its workforce, ensuring greater success and reliability for these mission-critical operations.","title":"1.3 Benefits of UX"},{"location":"ux/1-3-benefits/#references","text":"Why Software Fails - IEEE","title":"References"},{"location":"ux/1-4-maturity/","text":"1.4 Levels of Design Maturity Integration of user experience as a core strategic pillar within your organization is not a binary proposition. Every organization will have differences in the extent to which they have adopted design into their business process. For this reason, InVision defined a maturity model for experience design adoption. In this model, organizations are rated at one of five levels. It\u2019s important to be cognizant of your current maturity level within this model, and to appreciate that moving up this model only increases the overall return on investment to your mission, your stakeholders, and your end users. For example, per InVision\u2019s research, organizations are five times more likely to report having an impact on cost savings, when functioning at a Level 5 versus a Level 1. This number only increases when examining time to release. 1.4.1 Leveling Up Increasing your organization\u2019s strategic alignment around design and adoption of design practices can be done by adhering to a few guiding principles. Within each principle below are statements that, per InVision\u2019s findings, hold true at least twice as often in Level 5 organizations as in Level 1. Top-down belief in the value of design Executives talk about the value of design internally. Design shares priorities and goals with key partners. Executives prioritize decisions that lead to the best design/customer experience. Involve design throughout the software development process Design is well-integrated in the product development process. Design leaders are peers with product management and engineering leaders. Value user research Employees participate in user/customer research. Employees understand why human-centered design is valuable. Share design research and decision-making across disciplines Design work is shared in all hands meetings, important executive meetings, and other influential gatherings. Design has joint working sessions with key partners (e.g., workshops, stand-ups, etc.). Product/feature ideas are jointly developed and owned between design and key partners. References The New Design Frontier - InVision","title":"1.4 Levels of Design Maturity"},{"location":"ux/1-4-maturity/#14-levels-of-design-maturity","text":"Integration of user experience as a core strategic pillar within your organization is not a binary proposition. Every organization will have differences in the extent to which they have adopted design into their business process. For this reason, InVision defined a maturity model for experience design adoption. In this model, organizations are rated at one of five levels. It\u2019s important to be cognizant of your current maturity level within this model, and to appreciate that moving up this model only increases the overall return on investment to your mission, your stakeholders, and your end users. For example, per InVision\u2019s research, organizations are five times more likely to report having an impact on cost savings, when functioning at a Level 5 versus a Level 1. This number only increases when examining time to release.","title":"1.4 Levels of Design Maturity"},{"location":"ux/1-4-maturity/#141-leveling-up","text":"Increasing your organization\u2019s strategic alignment around design and adoption of design practices can be done by adhering to a few guiding principles. Within each principle below are statements that, per InVision\u2019s findings, hold true at least twice as often in Level 5 organizations as in Level 1.","title":"1.4.1 Leveling Up"},{"location":"ux/1-4-maturity/#top-down-belief-in-the-value-of-design","text":"Executives talk about the value of design internally. Design shares priorities and goals with key partners. Executives prioritize decisions that lead to the best design/customer experience.","title":"Top-down belief in the value of design"},{"location":"ux/1-4-maturity/#involve-design-throughout-the-software-development-process","text":"Design is well-integrated in the product development process. Design leaders are peers with product management and engineering leaders.","title":"Involve design throughout the software development process"},{"location":"ux/1-4-maturity/#value-user-research","text":"Employees participate in user/customer research. Employees understand why human-centered design is valuable.","title":"Value user research"},{"location":"ux/1-4-maturity/#share-design-research-and-decision-making-across-disciplines","text":"Design work is shared in all hands meetings, important executive meetings, and other influential gatherings. Design has joint working sessions with key partners (e.g., workshops, stand-ups, etc.). Product/feature ideas are jointly developed and owned between design and key partners.","title":"Share design research and decision-making across disciplines"},{"location":"ux/1-4-maturity/#references","text":"The New Design Frontier - InVision","title":"References"},{"location":"ux/2-1-what-is-ux/","text":"2.1 What is User Experience? Defined broadly, \u201cUser Experience\u201d is about how people experience and interact with an organization\u2019s varied products, systems and services. The focus of the User Experience craft is typically on interactive, digital experiences, but UX practitioners tend to take a broader, more holistic view, looking not only at a given product or service itself but at its users\u2019 expectations and the context in which it is used \u2013 which can include other products, non-digital communications and even people with whom the user communicates while using a product or service. This holistic view yields insights that help us to design digital experiences that fit more seamlessly into users\u2019 lives while helping them achieve more successful and satisfactory outcomes. In many cases, the insights and recommendations uncovered by the UX process can extend to those very same people and non-digital communications that surround an experience as well. 2.1.1 The \u201cThree Circles\u201d of User Experience This holistic focus is conveyed well via the classic \u201cThree Circles\u201d diagram first proposed by Peter Morville, considered one of the \u201cfounding fathers\u201d of the modern UX field: The meaning of each circle in this diagram is as follows: Content : This refers not just to images and copy, but to all the content, features and functions that comprise the experience. It\u2019s important to ensure that all aspects of the experience are included thoughtfully and purposefully to serve the needs of the system\u2019s users. Context : This refers to all of the external factors that a user may consider or encounter while using a given product, system or service. These factors vary greatly depending on the system and can include anything from distractions in the environment, to the device on which the experience is viewed, to other tools and systems that a system\u2019s user might be using simultaneously. Users : This refers to the people who use a given product, system or service. In most cases, the goal is to move beyond a singular, demographic-driven view of the user to establish a more nuanced understanding of distinct user profiles along with the unique needs, mindset, motivations, behaviors and limitations of each one. A deep understanding of the needs and context for each user profile results in more insightful design solutions that align more closely with the way that the system\u2019s users think and work. 2.1.2 Important Qualities of User Experience Usability is often the first aspect that comes to mind when considering the focus of user experience, but there are in actuality a number of other factors that UX practitioners take into account when shaping a product, system or service. This is captured well by another classic model created by Peter Morville: Each hexagon within this Honeycomb diagram is defined as follows: Useful : This refers to the relevance of content and features within a given system to its users. Content and features on a given interface are typically positioned and emphasized based on their level of usefulness or relevance in relation to other content on the screen. Usable : This refers to the ease of use of a given product or service, which includes the clarity of how features are presented as well as how reliably they behave. Desirable : This refers to emotional aspects of a system\u2019s design, which can include not only the sense of satisfaction experienced when a system aligns seamlessly with the users\u2019 needs, but also whether the organizational values reflected in the design resonate with those of the system\u2019s users. Findable : This means ensuring that navigation and content are designed and positioned in ways that are intuitive to end-users, allowing them to quickly find what they need in the places where they might expect to find them. Accessible : This means ensuring that products and services are usable for people with disabilities, which can include anything from hearing or vision impairment to color-blindness. Credible : This means designing so that users can feel that they can trust and rely on the information being presented within an experience, having confidence in the data integrity and system status presented therein. Valuable : This means ensuring that a product or service effectively advances the goals of the organization that sponsors it, whether the nature of those goals is educational, operational or otherwise. UX practitioners can design more effective digital experiences through careful and balanced consideration of these factors. References The Definition of User Experience (UX) \u2013 Nielsen Norman Group User Experience Design \u2013 Semantic Studios","title":"2.1 What is UX?"},{"location":"ux/2-1-what-is-ux/#21-what-is-user-experience","text":"Defined broadly, \u201cUser Experience\u201d is about how people experience and interact with an organization\u2019s varied products, systems and services. The focus of the User Experience craft is typically on interactive, digital experiences, but UX practitioners tend to take a broader, more holistic view, looking not only at a given product or service itself but at its users\u2019 expectations and the context in which it is used \u2013 which can include other products, non-digital communications and even people with whom the user communicates while using a product or service. This holistic view yields insights that help us to design digital experiences that fit more seamlessly into users\u2019 lives while helping them achieve more successful and satisfactory outcomes. In many cases, the insights and recommendations uncovered by the UX process can extend to those very same people and non-digital communications that surround an experience as well.","title":"2.1 What is User Experience?"},{"location":"ux/2-1-what-is-ux/#211-the-three-circles-of-user-experience","text":"This holistic focus is conveyed well via the classic \u201cThree Circles\u201d diagram first proposed by Peter Morville, considered one of the \u201cfounding fathers\u201d of the modern UX field: The meaning of each circle in this diagram is as follows: Content : This refers not just to images and copy, but to all the content, features and functions that comprise the experience. It\u2019s important to ensure that all aspects of the experience are included thoughtfully and purposefully to serve the needs of the system\u2019s users. Context : This refers to all of the external factors that a user may consider or encounter while using a given product, system or service. These factors vary greatly depending on the system and can include anything from distractions in the environment, to the device on which the experience is viewed, to other tools and systems that a system\u2019s user might be using simultaneously. Users : This refers to the people who use a given product, system or service. In most cases, the goal is to move beyond a singular, demographic-driven view of the user to establish a more nuanced understanding of distinct user profiles along with the unique needs, mindset, motivations, behaviors and limitations of each one. A deep understanding of the needs and context for each user profile results in more insightful design solutions that align more closely with the way that the system\u2019s users think and work.","title":"2.1.1 The \u201cThree Circles\u201d of User Experience"},{"location":"ux/2-1-what-is-ux/#212-important-qualities-of-user-experience","text":"Usability is often the first aspect that comes to mind when considering the focus of user experience, but there are in actuality a number of other factors that UX practitioners take into account when shaping a product, system or service. This is captured well by another classic model created by Peter Morville: Each hexagon within this Honeycomb diagram is defined as follows: Useful : This refers to the relevance of content and features within a given system to its users. Content and features on a given interface are typically positioned and emphasized based on their level of usefulness or relevance in relation to other content on the screen. Usable : This refers to the ease of use of a given product or service, which includes the clarity of how features are presented as well as how reliably they behave. Desirable : This refers to emotional aspects of a system\u2019s design, which can include not only the sense of satisfaction experienced when a system aligns seamlessly with the users\u2019 needs, but also whether the organizational values reflected in the design resonate with those of the system\u2019s users. Findable : This means ensuring that navigation and content are designed and positioned in ways that are intuitive to end-users, allowing them to quickly find what they need in the places where they might expect to find them. Accessible : This means ensuring that products and services are usable for people with disabilities, which can include anything from hearing or vision impairment to color-blindness. Credible : This means designing so that users can feel that they can trust and rely on the information being presented within an experience, having confidence in the data integrity and system status presented therein. Valuable : This means ensuring that a product or service effectively advances the goals of the organization that sponsors it, whether the nature of those goals is educational, operational or otherwise. UX practitioners can design more effective digital experiences through careful and balanced consideration of these factors.","title":"2.1.2 Important Qualities of User Experience"},{"location":"ux/2-1-what-is-ux/#references","text":"The Definition of User Experience (UX) \u2013 Nielsen Norman Group User Experience Design \u2013 Semantic Studios","title":"References"},{"location":"ux/2-2-disciplines/","text":"2.2 UX Disciplines & Project Roles In one sense, all participants in the software development lifecycle play a critical role in ensuring the quality of a digital product\u2019s user experience. Everyone from developers to program managers to visual designers and content creators must take into account how their decisions might affect the experience of the system\u2019s users. But for those who specialize in user experience, the core disciplines that comprise their skillset might be summarized as follows: User Research : A truly user-centered design cannot be delivered without first assembling a sufficient body of research on the system\u2019s target users. This research can consist of quantitative data such as analytics, or qualitative insights gained from observing or interviewing current or potential users. Experience Strategy : Once the users\u2019 needs, expectations and challenges are well understood, those insights must then be synthesized and reconciled with the goals of the organization sponsoring the experience. This means ensuring that the value the organization is looking to provide aligns with the value the system\u2019s users seek. Once the core values driving the experience are established, those can then be used as the foundation for determining what kinds of content and features should be incorporated and how they should be prioritized, then translated into strategically-driven product roadmaps and other plans that lay a clear path to realizing value for both the users of a system and the organization that sponsored its creation. Information Architecture : This discipline entails organizing information within an experience in a way that is meaningful and intuitive to users. Prior to beginning screen designs, UX practitioners spend time considering the structure of the experience and the relationships between different types of content within it. They consider where features and content should fall within that structure in order to meet users\u2019 needs. This typically results in maps of the system\u2019s architecture and key processes within it, and often extends to content strategy documentation that outlines what content can be reused or refined versus what needs to be newly created. Interaction Design : Once user research, experience strategy and information architecture (IA) have been established, UX practitioners can then begin designing screens within the experience to align with established needs and goals. Content and features are incorporated into user interfaces (UI) that align with the target devices through which an experience will be accessed. At this point, the presentation and behavior of all interactive elements such as buttons, controls, transitions and animations are defined and documented in detail to prepare for technical implementation of the system. 2.2.1 Planning User Experience Teams While personnel from all disciplines share some level of responsibility for delivering products that meet user needs, at least one User Experience specialist should be incorporated within each software development team. This ensures that end users have clear and consistent advocacy within the software development lifecycle, uninhibited by conflicting objectives that may be held by developers, visual designers, program managers and others that may be involved in project delivery. The balance of these roles helps to ensure that each one\u2019s objectives become transparent in the planning and execution of the design, yielding better communication and decision-making overall. Specializations do exist for each of the separate core disciplines outlined above, however many User Experience professionals carry a sufficient balance of these skills to effectively manage all of them at once. A strong User Experience practitioner will be skilled in user research methods, navigation structure and process analysis in addition to interaction design. The more senior-level practitioners will be proficient in product strategy and planning, and should be involved by Program Management teams at the earliest stages of a project\u2019s conception to ensure the right research, design and testing approach through all stages of the project. Enlisting strong UX generalists rather than specialized research and design functions is generally more cost-effective, and will help to maintain a cohesive product vision while ensuring a high degree of consistency, adaptability and agility within a dynamic project environment. While User Experience practitioners do establish the foundations for interface design, the craft of creating pixel-perfect page layouts are often managed by a separate Visual Design function who holds a much deeper understanding of factors such as color, typography and creative asset production. Some practitioners may have both skillsets, but considering these as separate functions will increase the likelihood of identifying talent that holds sufficient depth of experience, skill and perspective for each role. Similarly, while User Experience practitioners should be competent in prototyping and understanding the implications of technical factors identified by development teams, true front-end development skills should be considered a separate role within the project team. References What Is User Experience (UX) Design? Everything You Need To Know To Get Started \u2013 CareerFoundry","title":"2.2 UX Disciplines & Project Roles"},{"location":"ux/2-2-disciplines/#22-ux-disciplines-project-roles","text":"In one sense, all participants in the software development lifecycle play a critical role in ensuring the quality of a digital product\u2019s user experience. Everyone from developers to program managers to visual designers and content creators must take into account how their decisions might affect the experience of the system\u2019s users. But for those who specialize in user experience, the core disciplines that comprise their skillset might be summarized as follows: User Research : A truly user-centered design cannot be delivered without first assembling a sufficient body of research on the system\u2019s target users. This research can consist of quantitative data such as analytics, or qualitative insights gained from observing or interviewing current or potential users. Experience Strategy : Once the users\u2019 needs, expectations and challenges are well understood, those insights must then be synthesized and reconciled with the goals of the organization sponsoring the experience. This means ensuring that the value the organization is looking to provide aligns with the value the system\u2019s users seek. Once the core values driving the experience are established, those can then be used as the foundation for determining what kinds of content and features should be incorporated and how they should be prioritized, then translated into strategically-driven product roadmaps and other plans that lay a clear path to realizing value for both the users of a system and the organization that sponsored its creation. Information Architecture : This discipline entails organizing information within an experience in a way that is meaningful and intuitive to users. Prior to beginning screen designs, UX practitioners spend time considering the structure of the experience and the relationships between different types of content within it. They consider where features and content should fall within that structure in order to meet users\u2019 needs. This typically results in maps of the system\u2019s architecture and key processes within it, and often extends to content strategy documentation that outlines what content can be reused or refined versus what needs to be newly created. Interaction Design : Once user research, experience strategy and information architecture (IA) have been established, UX practitioners can then begin designing screens within the experience to align with established needs and goals. Content and features are incorporated into user interfaces (UI) that align with the target devices through which an experience will be accessed. At this point, the presentation and behavior of all interactive elements such as buttons, controls, transitions and animations are defined and documented in detail to prepare for technical implementation of the system.","title":"2.2 UX Disciplines &amp; Project Roles"},{"location":"ux/2-2-disciplines/#221-planning-user-experience-teams","text":"While personnel from all disciplines share some level of responsibility for delivering products that meet user needs, at least one User Experience specialist should be incorporated within each software development team. This ensures that end users have clear and consistent advocacy within the software development lifecycle, uninhibited by conflicting objectives that may be held by developers, visual designers, program managers and others that may be involved in project delivery. The balance of these roles helps to ensure that each one\u2019s objectives become transparent in the planning and execution of the design, yielding better communication and decision-making overall. Specializations do exist for each of the separate core disciplines outlined above, however many User Experience professionals carry a sufficient balance of these skills to effectively manage all of them at once. A strong User Experience practitioner will be skilled in user research methods, navigation structure and process analysis in addition to interaction design. The more senior-level practitioners will be proficient in product strategy and planning, and should be involved by Program Management teams at the earliest stages of a project\u2019s conception to ensure the right research, design and testing approach through all stages of the project. Enlisting strong UX generalists rather than specialized research and design functions is generally more cost-effective, and will help to maintain a cohesive product vision while ensuring a high degree of consistency, adaptability and agility within a dynamic project environment. While User Experience practitioners do establish the foundations for interface design, the craft of creating pixel-perfect page layouts are often managed by a separate Visual Design function who holds a much deeper understanding of factors such as color, typography and creative asset production. Some practitioners may have both skillsets, but considering these as separate functions will increase the likelihood of identifying talent that holds sufficient depth of experience, skill and perspective for each role. Similarly, while User Experience practitioners should be competent in prototyping and understanding the implications of technical factors identified by development teams, true front-end development skills should be considered a separate role within the project team.","title":"2.2.1 Planning User Experience Teams"},{"location":"ux/2-2-disciplines/#references","text":"What Is User Experience (UX) Design? Everything You Need To Know To Get Started \u2013 CareerFoundry","title":"References"},{"location":"ux/2-3-lifecycle/","text":"2.3 UX in Software Lifecycle Methodologies When planning a software development project, the process typically breaks down into four discrete stages, each of which will be described in greater detail within section 3.0. Research & Discovery : This is the stage where initial research activities will be performed and insights will be synthesized based on the research findings. A high-level strategy should be established at this stage that includes experience goals, tactics, plans and content/feature recommendations which can then be used as a foundation for Conceptual Design. Conceptual Design : During this stage, key aspects of the experience will be modeled and discussed in order to establish alignment around the overall approach and design framework for the experience. The conceptual models produced during this stage can describe things like site architecture, processes, navigation patterns and key page layouts to help lay the foundations for an efficient Detailed Design process. A key goal of this stage is to establish clear expectations about how a digital experience will be presented at a high level in order to minimize the need for significant rework in the future. Detailed Design : Once foundations for the experience have been established, the Detailed Design stage then builds on those foundations, designing and specifying detailed elements and interactions for each section and component of the experience. This provides the basis for visual design comps to be created in addition to a clear and detailed plan that developers can follow in order to implement the experience. Support : During this stage, UX practitioners play a supporting role to the visual design and technical development teams who are producing the experience. This can involve addressing questions to clarify intended interactive behaviors, revising designs to resolve technical implementation challenges, and assisting with the testing and delivery of the implemented experience. These stages can sometimes be named or broken down differently, but in essence outline the stages of a typical user experience process. However it is important to note that some of these stages may not be required at times depending on the nature and goals of the project. For example, if a project entails targeted refinements and enhancements to an existing experience, full Research/Discovery and Conceptual Design stages may not be needed; however in this scenario, some level of user input should be collected and reviewed in order to determine what refinements should be made. Similarly, a Conceptual Design stage can in some case proceed without a Research/Discovery stage, assuming that existing research sufficiently addresses key questions relevant to the design problem at hand. The approach to planning and managing each of these stages can vary considerably depending on the software development process leveraged by the project team as a whole, described in further detail below. 2.3.1 Waterfall Process Considerations In a \u201cwaterfall\u201d process, each of these stages happens in sequential order, with the output of each stage being typically reviewed, finalized and approved in its entirety before proceeding to the next stage. In this type of process methodology, the typical expectation is that all documentation is comprehensive and exhaustive, addressing all possible questions and scenarios prior to any development being performed. Representative members of each project team can be incorporated into each stage to ensure that proper communication occurs and relevant questions are identified early in the process, but often this is not the case in a classic waterfall process. Instead, each project team often works independently from each other, with the resulting documentation being tossed \u201cover the wall\u201d so to speak to other project teams in order to guide their efforts for the next process stage. The main advantage of this approach is the upfront clarity and stability of plans and specifications prior to the beginning of technical implementation. However there are several disadvantages to the waterfall approach: Reduced communication and collaboration between project teams Heavy and often unwieldy design documentation Longer overall project timelines Working software not available for evaluation until late in the project lifecycle Inflexibility to changing requirements and circumstances surrounding the project Cross-team communication challenges can sometimes be circumvented in a waterfall process through adopting daily \u201cstand-up\u201d or \u201cscrum\u201d meeting that are typical in an Agile process; however daily scrum meetings alone do not make a project truly \u201cAgile, and leave many of the other disadvantages of the Waterfall methodology unaddressed. 2.3.2 Agile Process Considerations The Agile methodology was devised in order to address many of these disadvantages of waterfall processes. However the classic Agile methodology focuses more so on technical development aspects and less so on user experience or design aspects of the software development lifecycle. In order for user experience and design teams to work efficiently and effectively within the process, some additional process considerations must be made. The core Agile values are what remain consistent regardless of project role or the type of Agile process being employed. These core values are: Individuals and interactions over processes and tools Working software over comprehensive documentation Customer collaboration over contract negotiation Responding to change over following a plan Putting these values into context, things like plans, processes, tools and documentation are still relied upon heavily in an Agile environment, however all of these are secondary to effective communication, collaboration and adaptability among members of the project team. As such, there are many crucial \u201cceremonies\u201d that also remain consistent within an Agile process, playing a key role in ensuring that the values and benefits of the Agile methodology are realized. A daily \u201cscrum\u201d or \u201cstandup\u201d meeting is a one type of Agile ceremony that ensures that team members across disciplines have a daily view of what features are in focus today and what key challenges might impact their completion. Teams typically work from a \u201cproduct backlog\u201d \u2013 a prioritized list of all features and capabilities that will ultimately be part of the final experience \u2013 and break that product backlog down into \u201csprints\u201d, typically 2 weeks in duration, where a portion of the items from the backlog are expected to be complete. As changes occur or new requirements are realized, this product backlog is continually \u201cgroomed\u201d to ensure that the project plan is optimized for the best outcome, and planning sessions at the start of each new sprint offer an opportunity to put the adjusted plan into effect. See the Agile Playbook for further details on typical Agile ceremonies, tools and methods. In addition to values and ceremonies, the Agile management framework is another aspect of the methodology that remains relatively unchanged when design teams are incorporated, however slight amendments must be made to define a clear role for User Experience. The Agile management framework identifies two key roles \u2013 the Scrum Master and the Product Owner \u2013 where the Scrum Master\u2019s primary role is to keep the project team focused on its goals for the sprint, and the Product Owner\u2019s primary role is to keep the team\u2019s work aligned with the overall product vision. While the Agile methodology does not directly prescribe a role for User Experience teams, their role is best considered as an extension to the Product Owner role. This means helping to establish the product context during the Research/Discovery stage, summarizing core user needs and business requirements. This also entails modeling the product vision during the Conceptual Design stage, creating preliminary wireframes and user stories that describe the expected user needs and behaviors that each feature of the experience will be designed to support. Lastly, this means leading the creation, prioritization and ongoing \u201cgrooming\u201d of the product backlog, ensuring that the most valuable features are delivered first and meet the expectations of the users for whom they are designed. As a project moves into detailed design, the task of backlog grooming is often shared with members of the Project Management team, with members of the UX team offering significant guidance while focusing mainly on the creation of design specifications for each item in the backlog. The aspect in which the classic Agile methodology is least prescriptive for User Experience teams is its guidance around planning each of the process stages and determining what user experience practices to incorporate within them. Many of the Agile ceremonies outlined above are more relevant to the Detailed Design and Support stages than they are to the initial Research/Discovery and Conceptual Design stages. In Agile terms, these first two stages are often combined and named \u201cSprint Zero\u201d, continuing to resemble a waterfall process in many ways. This allows for solid research foundations and a clear product vision to be established in advance of working iteratively on detailed design specifications. Cross-team input is valuable at any stage, and daily scrums may be incorporated to facilitate this, but beginning front-end development before a clear product vision is set can result in lost development cycles and a significant amount of rework. Design teams should focus first on establishing a clear product architecture and basic alignment around how features might be translated into layouts before the team begins iterations of detailed design and prototyping. Once a product backlog is created at the end of Conceptual Design, the project team is prepared to adopt all other typical Agile ceremonies for the remainder of the project. Detailed Design and Support are the stages where the Agile methodology is utilized in its truest form. In an ideal scenario, all project teams are focused on the same set of features at once, working in unison to arrive at a functioning prototype of a specific feature. User Experience teams leads their counterparts through the iterative process for each feature: Understanding and clarifying requirements Defining key criteria for the design solution based user needs, business goals and technology capabilities Exploring different design solutions that meet the requirements and criteria Deciding which solution to pursue based on input from across team functions Prototyping the solution Testing, validating and potentially refining the solution This constant communication and direct translation of designs into working code can significantly reduce the amount documentation created or needed within a project, a documentation approach often referred to as \u201cLean\u201d wherein design specifications are only as exhaustive as necessitated by the project team. In an ideal Agile scenario where all teams can focus on the same set of features at once, the cycle described above can take anywhere from 2-5 days to complete, assuming that cross-disciplinary teams are well-integrated and that features in the product backlog are broken into small, manageable chunks that are achievable within that time frame. By the end of the sprint, the expectation is that all backlog items that have been initiated are completed, reviewed and approved, however selective items can move into later sprints if necessary. 2.3.3 UX Process at Different Stages of the \u201cAgility Spectrum\u201d However some organizations may have difficulty achieving this level of integration, and even then, readiness for these methods may vary between different teams or projects within an organization, falling at different points of the \u201cagility spectrum\u201d. The approach to planning the Detailed Design stage may vary depending on the degree of \u201cagility\u201d at which any given team or project is ready to operate. Limiting factors to project agility often go beyond the team or organization\u2019s level of training and experience, and can extend to project-specific factors such as resource availability, vendor involvement, project budget and ability to co-locate. In these scenarios, there are a number of ways that a project approach can be adjusted to ensure successful collaboration and delivery. One approach is to rely on a User Experience team\u2019s competency in creating clickable prototypes using software such as InVision, Sketch or Axure. This reduces reliance on the development team to arrive at a working model and significantly simplifies the level of effort required to produce it. Development teams still need to stay closely involved in its creation and will certainly have additional tasks to perform such as data sourcing and more complex interactivity, but creating clickable prototypes in software allows project teams to effectively validate the usability and flow of a given feature while enabling development teams to work independently and in parallel on those additional tasks. This also allows the user experience team to work at a faster velocity on a range of features while development teams work at their own pace determining the optimal implementation approach. The key here is ensuring that both teams have a portion of their velocity (typically 10-20% of available bandwidth) dedicated to addressing questions and collaborating across teams on different pieces of work. The length of each sprint is another variable to consider. While a 2-week sprint cycle is considered standard, lengthening that cycle to 3 or even 4 weeks can help ensure sprint objectives are successfully achieved. In the scenario described above where project teams spend some portion of their time working independently and in parallel, a longer sprint cycle can ensure that all teams have sufficient time to reconvene, discuss their findings and make adjustments so that all sprint output is delivered on time, with exhaustive validation and alignment across stakeholders, further reducing the potential need for rework throughout the project timeline. Another approach is to anticipate \u201cstaggered sprints\u201d from the outset. This means that the user experience team always working one full sprint ahead of the development team. To do this, the notion must be applied here of having each team\u2019s velocity account for a portion of time dedicate to collaborating across teams on different pieces of work. While it would be expected that the same staggered sprint duration would be maintained throughout the project lifecycle, this approach does allow one team to stay on track with delivery in the event that another team faces challenges with maintaining that pace. The need for additional time to work through complex issues is a common challenge for development teams, but can be a challenge for user experience teams as well. If this type of challenge is foreseen during the project\u2019s planning activities, something called a \u201cdesign spike\u201d can be instituted to alleviate this issue. A design spike is an activity that can take place of a regular sprint to resolve big unknowns and work through complexities that would otherwise impact the efficiency of the project team. During this time, development teams are typically assigned non-dependent work while the user experience team gathers additional requirements and potential explore concepts for specific feature areas within the product. While these practices may not be considered Agile in its truest form, they may become essential in managing a team successfully through limiting factors to agility such as resource availability, vendor involvement, project budget and ability to co-locate. These practices might also be considered stepping stones to more advanced and integrated Agile practices, enabling project teams to abide by the value and reap the benefits of the Agile methodology while ensuring project plans and output are optimized for success. 2.3.4 Practical Considerations When planning a project or estimating work that involves a User Experience component within an Agile setting, there are a few key guidelines or common practices to consider. One common practice is aligning team size and levels across disciplines. A general rule of thumb is to match every user experience designer with a visual designer and a front-end developer, also taking the levels of seniority and team hierarchy into account. This helps to ensure that the output of one team aligns with the production capacity of other teams on the project. This may require adjustment based on project-specific factors, but is often a good place to start. This rule of thumb does not typically apply to project management or back-end technology functions, who each have unique considerations to take into account when estimating team size. Another common practice is ensuring that separate user stories are written for user experience versus technology teams. There may be significant overlap or even replication of stories between teams but this is not always the case. For one thing, development teams have different considerations to make when estimating the level of effort associated with a user story, which can result in the development effort associated with a story being much larger than the design effort. In these cases, user stories may be decomposed into smaller, more manageable stories from a development perspective. Likewise, development teams often approach work differently from an efficiency standpoint, resulting in a different view of how user stories should be structured. For example, user experience stories are typically focused on the front-end experience, but many features may have a significant back-end component in common, resulting in greater development efficiency if those stories are in some way grouped together. The vast majority of user stories will be shared across both teams, but there are frequently cases where differentiating a handful of these stories will result in a more efficient development process. One final consideration is around estimating the \u201csize\u201d or level of effort associated with a user story. While any design problem may have a number of viable solutions, the Conceptual Design stage helps narrow down the range of possible solutions which in turn makes estimation easier. On this basis, the User Experience team should first discuss what successful completion of each user story might entail, then determine how complex and time-consuming the delivery of that solution might be. To approximate and track this, each item in the product backlog is often assigned a number from the Fibonacci sequence (e.g. 1, 2, 3, 5, 8, 13, 21, etc.) which represents the complexity of the design problem in increasing orders of magnitude. These \u201cstory points\u201d are often used to track a team\u2019s velocity, with a baseline established in the first sprint as to how many story points the User Experience team can successfully deliver. Particularly large values are usually an indication that a story needs to be decomposed into smaller, more manageable stories, particularly when those values are higher than the baseline velocity that an individual team member can deliver in one sprint. These story point values can be taken into account when planning what items to take into a sprint, and can be adjusted at the start of each sprint as new requirements or complexities are learned. Further details about each stage of the User Experience process, including the key methods and activities conducted at each stage, will be outlined in the UX Principles & Methodologies section of this playbook. References Agile Manifesto \u2013 agilemanifesto.org Scrum \u2013 Atlassian Design Sprint Kit \u2013 Google Benefits of Partnering Closely with Your Product Owner \u2013 UXmatters A Spectrum of Approaches to Project Agility \u2013 PMI Spikes \u2013 Scaled Agile Fitting Big-Picture UX Into Agile Development \u2013 Smashing Magazine","title":"2.3 UX in Software Lifecycle Methodologies"},{"location":"ux/2-3-lifecycle/#23-ux-in-software-lifecycle-methodologies","text":"When planning a software development project, the process typically breaks down into four discrete stages, each of which will be described in greater detail within section 3.0. Research & Discovery : This is the stage where initial research activities will be performed and insights will be synthesized based on the research findings. A high-level strategy should be established at this stage that includes experience goals, tactics, plans and content/feature recommendations which can then be used as a foundation for Conceptual Design. Conceptual Design : During this stage, key aspects of the experience will be modeled and discussed in order to establish alignment around the overall approach and design framework for the experience. The conceptual models produced during this stage can describe things like site architecture, processes, navigation patterns and key page layouts to help lay the foundations for an efficient Detailed Design process. A key goal of this stage is to establish clear expectations about how a digital experience will be presented at a high level in order to minimize the need for significant rework in the future. Detailed Design : Once foundations for the experience have been established, the Detailed Design stage then builds on those foundations, designing and specifying detailed elements and interactions for each section and component of the experience. This provides the basis for visual design comps to be created in addition to a clear and detailed plan that developers can follow in order to implement the experience. Support : During this stage, UX practitioners play a supporting role to the visual design and technical development teams who are producing the experience. This can involve addressing questions to clarify intended interactive behaviors, revising designs to resolve technical implementation challenges, and assisting with the testing and delivery of the implemented experience. These stages can sometimes be named or broken down differently, but in essence outline the stages of a typical user experience process. However it is important to note that some of these stages may not be required at times depending on the nature and goals of the project. For example, if a project entails targeted refinements and enhancements to an existing experience, full Research/Discovery and Conceptual Design stages may not be needed; however in this scenario, some level of user input should be collected and reviewed in order to determine what refinements should be made. Similarly, a Conceptual Design stage can in some case proceed without a Research/Discovery stage, assuming that existing research sufficiently addresses key questions relevant to the design problem at hand. The approach to planning and managing each of these stages can vary considerably depending on the software development process leveraged by the project team as a whole, described in further detail below.","title":"2.3 UX in Software Lifecycle Methodologies"},{"location":"ux/2-3-lifecycle/#231-waterfall-process-considerations","text":"In a \u201cwaterfall\u201d process, each of these stages happens in sequential order, with the output of each stage being typically reviewed, finalized and approved in its entirety before proceeding to the next stage. In this type of process methodology, the typical expectation is that all documentation is comprehensive and exhaustive, addressing all possible questions and scenarios prior to any development being performed. Representative members of each project team can be incorporated into each stage to ensure that proper communication occurs and relevant questions are identified early in the process, but often this is not the case in a classic waterfall process. Instead, each project team often works independently from each other, with the resulting documentation being tossed \u201cover the wall\u201d so to speak to other project teams in order to guide their efforts for the next process stage. The main advantage of this approach is the upfront clarity and stability of plans and specifications prior to the beginning of technical implementation. However there are several disadvantages to the waterfall approach: Reduced communication and collaboration between project teams Heavy and often unwieldy design documentation Longer overall project timelines Working software not available for evaluation until late in the project lifecycle Inflexibility to changing requirements and circumstances surrounding the project Cross-team communication challenges can sometimes be circumvented in a waterfall process through adopting daily \u201cstand-up\u201d or \u201cscrum\u201d meeting that are typical in an Agile process; however daily scrum meetings alone do not make a project truly \u201cAgile, and leave many of the other disadvantages of the Waterfall methodology unaddressed.","title":"2.3.1 Waterfall Process Considerations"},{"location":"ux/2-3-lifecycle/#232-agile-process-considerations","text":"The Agile methodology was devised in order to address many of these disadvantages of waterfall processes. However the classic Agile methodology focuses more so on technical development aspects and less so on user experience or design aspects of the software development lifecycle. In order for user experience and design teams to work efficiently and effectively within the process, some additional process considerations must be made. The core Agile values are what remain consistent regardless of project role or the type of Agile process being employed. These core values are: Individuals and interactions over processes and tools Working software over comprehensive documentation Customer collaboration over contract negotiation Responding to change over following a plan Putting these values into context, things like plans, processes, tools and documentation are still relied upon heavily in an Agile environment, however all of these are secondary to effective communication, collaboration and adaptability among members of the project team. As such, there are many crucial \u201cceremonies\u201d that also remain consistent within an Agile process, playing a key role in ensuring that the values and benefits of the Agile methodology are realized. A daily \u201cscrum\u201d or \u201cstandup\u201d meeting is a one type of Agile ceremony that ensures that team members across disciplines have a daily view of what features are in focus today and what key challenges might impact their completion. Teams typically work from a \u201cproduct backlog\u201d \u2013 a prioritized list of all features and capabilities that will ultimately be part of the final experience \u2013 and break that product backlog down into \u201csprints\u201d, typically 2 weeks in duration, where a portion of the items from the backlog are expected to be complete. As changes occur or new requirements are realized, this product backlog is continually \u201cgroomed\u201d to ensure that the project plan is optimized for the best outcome, and planning sessions at the start of each new sprint offer an opportunity to put the adjusted plan into effect. See the Agile Playbook for further details on typical Agile ceremonies, tools and methods. In addition to values and ceremonies, the Agile management framework is another aspect of the methodology that remains relatively unchanged when design teams are incorporated, however slight amendments must be made to define a clear role for User Experience. The Agile management framework identifies two key roles \u2013 the Scrum Master and the Product Owner \u2013 where the Scrum Master\u2019s primary role is to keep the project team focused on its goals for the sprint, and the Product Owner\u2019s primary role is to keep the team\u2019s work aligned with the overall product vision. While the Agile methodology does not directly prescribe a role for User Experience teams, their role is best considered as an extension to the Product Owner role. This means helping to establish the product context during the Research/Discovery stage, summarizing core user needs and business requirements. This also entails modeling the product vision during the Conceptual Design stage, creating preliminary wireframes and user stories that describe the expected user needs and behaviors that each feature of the experience will be designed to support. Lastly, this means leading the creation, prioritization and ongoing \u201cgrooming\u201d of the product backlog, ensuring that the most valuable features are delivered first and meet the expectations of the users for whom they are designed. As a project moves into detailed design, the task of backlog grooming is often shared with members of the Project Management team, with members of the UX team offering significant guidance while focusing mainly on the creation of design specifications for each item in the backlog. The aspect in which the classic Agile methodology is least prescriptive for User Experience teams is its guidance around planning each of the process stages and determining what user experience practices to incorporate within them. Many of the Agile ceremonies outlined above are more relevant to the Detailed Design and Support stages than they are to the initial Research/Discovery and Conceptual Design stages. In Agile terms, these first two stages are often combined and named \u201cSprint Zero\u201d, continuing to resemble a waterfall process in many ways. This allows for solid research foundations and a clear product vision to be established in advance of working iteratively on detailed design specifications. Cross-team input is valuable at any stage, and daily scrums may be incorporated to facilitate this, but beginning front-end development before a clear product vision is set can result in lost development cycles and a significant amount of rework. Design teams should focus first on establishing a clear product architecture and basic alignment around how features might be translated into layouts before the team begins iterations of detailed design and prototyping. Once a product backlog is created at the end of Conceptual Design, the project team is prepared to adopt all other typical Agile ceremonies for the remainder of the project. Detailed Design and Support are the stages where the Agile methodology is utilized in its truest form. In an ideal scenario, all project teams are focused on the same set of features at once, working in unison to arrive at a functioning prototype of a specific feature. User Experience teams leads their counterparts through the iterative process for each feature: Understanding and clarifying requirements Defining key criteria for the design solution based user needs, business goals and technology capabilities Exploring different design solutions that meet the requirements and criteria Deciding which solution to pursue based on input from across team functions Prototyping the solution Testing, validating and potentially refining the solution This constant communication and direct translation of designs into working code can significantly reduce the amount documentation created or needed within a project, a documentation approach often referred to as \u201cLean\u201d wherein design specifications are only as exhaustive as necessitated by the project team. In an ideal Agile scenario where all teams can focus on the same set of features at once, the cycle described above can take anywhere from 2-5 days to complete, assuming that cross-disciplinary teams are well-integrated and that features in the product backlog are broken into small, manageable chunks that are achievable within that time frame. By the end of the sprint, the expectation is that all backlog items that have been initiated are completed, reviewed and approved, however selective items can move into later sprints if necessary.","title":"2.3.2 Agile Process Considerations"},{"location":"ux/2-3-lifecycle/#233-ux-process-at-different-stages-of-the-agility-spectrum","text":"However some organizations may have difficulty achieving this level of integration, and even then, readiness for these methods may vary between different teams or projects within an organization, falling at different points of the \u201cagility spectrum\u201d. The approach to planning the Detailed Design stage may vary depending on the degree of \u201cagility\u201d at which any given team or project is ready to operate. Limiting factors to project agility often go beyond the team or organization\u2019s level of training and experience, and can extend to project-specific factors such as resource availability, vendor involvement, project budget and ability to co-locate. In these scenarios, there are a number of ways that a project approach can be adjusted to ensure successful collaboration and delivery. One approach is to rely on a User Experience team\u2019s competency in creating clickable prototypes using software such as InVision, Sketch or Axure. This reduces reliance on the development team to arrive at a working model and significantly simplifies the level of effort required to produce it. Development teams still need to stay closely involved in its creation and will certainly have additional tasks to perform such as data sourcing and more complex interactivity, but creating clickable prototypes in software allows project teams to effectively validate the usability and flow of a given feature while enabling development teams to work independently and in parallel on those additional tasks. This also allows the user experience team to work at a faster velocity on a range of features while development teams work at their own pace determining the optimal implementation approach. The key here is ensuring that both teams have a portion of their velocity (typically 10-20% of available bandwidth) dedicated to addressing questions and collaborating across teams on different pieces of work. The length of each sprint is another variable to consider. While a 2-week sprint cycle is considered standard, lengthening that cycle to 3 or even 4 weeks can help ensure sprint objectives are successfully achieved. In the scenario described above where project teams spend some portion of their time working independently and in parallel, a longer sprint cycle can ensure that all teams have sufficient time to reconvene, discuss their findings and make adjustments so that all sprint output is delivered on time, with exhaustive validation and alignment across stakeholders, further reducing the potential need for rework throughout the project timeline. Another approach is to anticipate \u201cstaggered sprints\u201d from the outset. This means that the user experience team always working one full sprint ahead of the development team. To do this, the notion must be applied here of having each team\u2019s velocity account for a portion of time dedicate to collaborating across teams on different pieces of work. While it would be expected that the same staggered sprint duration would be maintained throughout the project lifecycle, this approach does allow one team to stay on track with delivery in the event that another team faces challenges with maintaining that pace. The need for additional time to work through complex issues is a common challenge for development teams, but can be a challenge for user experience teams as well. If this type of challenge is foreseen during the project\u2019s planning activities, something called a \u201cdesign spike\u201d can be instituted to alleviate this issue. A design spike is an activity that can take place of a regular sprint to resolve big unknowns and work through complexities that would otherwise impact the efficiency of the project team. During this time, development teams are typically assigned non-dependent work while the user experience team gathers additional requirements and potential explore concepts for specific feature areas within the product. While these practices may not be considered Agile in its truest form, they may become essential in managing a team successfully through limiting factors to agility such as resource availability, vendor involvement, project budget and ability to co-locate. These practices might also be considered stepping stones to more advanced and integrated Agile practices, enabling project teams to abide by the value and reap the benefits of the Agile methodology while ensuring project plans and output are optimized for success.","title":"2.3.3 UX Process at Different Stages of the \u201cAgility Spectrum\u201d"},{"location":"ux/2-3-lifecycle/#234-practical-considerations","text":"When planning a project or estimating work that involves a User Experience component within an Agile setting, there are a few key guidelines or common practices to consider. One common practice is aligning team size and levels across disciplines. A general rule of thumb is to match every user experience designer with a visual designer and a front-end developer, also taking the levels of seniority and team hierarchy into account. This helps to ensure that the output of one team aligns with the production capacity of other teams on the project. This may require adjustment based on project-specific factors, but is often a good place to start. This rule of thumb does not typically apply to project management or back-end technology functions, who each have unique considerations to take into account when estimating team size. Another common practice is ensuring that separate user stories are written for user experience versus technology teams. There may be significant overlap or even replication of stories between teams but this is not always the case. For one thing, development teams have different considerations to make when estimating the level of effort associated with a user story, which can result in the development effort associated with a story being much larger than the design effort. In these cases, user stories may be decomposed into smaller, more manageable stories from a development perspective. Likewise, development teams often approach work differently from an efficiency standpoint, resulting in a different view of how user stories should be structured. For example, user experience stories are typically focused on the front-end experience, but many features may have a significant back-end component in common, resulting in greater development efficiency if those stories are in some way grouped together. The vast majority of user stories will be shared across both teams, but there are frequently cases where differentiating a handful of these stories will result in a more efficient development process. One final consideration is around estimating the \u201csize\u201d or level of effort associated with a user story. While any design problem may have a number of viable solutions, the Conceptual Design stage helps narrow down the range of possible solutions which in turn makes estimation easier. On this basis, the User Experience team should first discuss what successful completion of each user story might entail, then determine how complex and time-consuming the delivery of that solution might be. To approximate and track this, each item in the product backlog is often assigned a number from the Fibonacci sequence (e.g. 1, 2, 3, 5, 8, 13, 21, etc.) which represents the complexity of the design problem in increasing orders of magnitude. These \u201cstory points\u201d are often used to track a team\u2019s velocity, with a baseline established in the first sprint as to how many story points the User Experience team can successfully deliver. Particularly large values are usually an indication that a story needs to be decomposed into smaller, more manageable stories, particularly when those values are higher than the baseline velocity that an individual team member can deliver in one sprint. These story point values can be taken into account when planning what items to take into a sprint, and can be adjusted at the start of each sprint as new requirements or complexities are learned. Further details about each stage of the User Experience process, including the key methods and activities conducted at each stage, will be outlined in the UX Principles & Methodologies section of this playbook.","title":"2.3.4 Practical Considerations"},{"location":"ux/2-3-lifecycle/#references","text":"Agile Manifesto \u2013 agilemanifesto.org Scrum \u2013 Atlassian Design Sprint Kit \u2013 Google Benefits of Partnering Closely with Your Product Owner \u2013 UXmatters A Spectrum of Approaches to Project Agility \u2013 PMI Spikes \u2013 Scaled Agile Fitting Big-Picture UX Into Agile Development \u2013 Smashing Magazine","title":"References"},{"location":"ux/3-1-principles/","text":"3.1 UX Principles Establishing anchoring user experience principles allows us a mechanism to instill consistency across the breadth of USAF Logistics Information Systems\u2019 portfolio. These principles represent goals at a high, abstract level of the user\u2019s experience, but should be reflected in the design and execution of specific capabilities wherever applicable. In this way, we can know that even where specific interactions and interface components will differ per the respective requirements of a given system, as long as they are successfully fulfilling the same larger UX principle, an overarching consistency of purpose, experience, and mission support is being met. Referring to these principles consistently over time offers decision-making guidance, from strategic efforts (e.g. prioritizing features) to tactical execution (e.g. determining specific interactions and system flows). To best serve the logistics community and its missions, systems should adhere to the following eight interrelated UX principles: 3.1.1 Enable Clear and Immediate Decision Support Paramount to a system\u2019s ability to support its mission is highly effective user enablement, especially for logistics information systems in the area of decision-making. To that end, a system\u2019s design should first and foremost support this critical function. Proper enablement includes: Intuitive and easily repeatable task flows for arriving at decision-supporting information. Formatting and presenting decision-supporting information in a way that facilitates subsequent steps (either within or outside of the system). Providing appropriate descriptions, context, and caveats with data to better inform decision-making. Favoring recognition over recall by the user. The user can select from clearly presented options instead of recalling codes or meanings. Options are reduced to only those that are applicable in context. Plain-text descriptions are offered wherever data is coded. All of this requires that users and their key tasks and decisions are understood deeply by the system owners and designers. 3.1.2 Promote Data Integrity and Accuracy Data lies at the heart of logistics information systems and processes. Faithful representation and management of this data, then, is crucial to mission success for their users. For users to have confidence in a system\u2019s data, they must understand how the system works. Further, a policy of data transparency will improve the data\u2019s accuracy over time and build trust in its systems. Enterprise-wide data integrity and accuracy can be ensured by: Never obscuring or correcting problematic source data. Instead, at a minimum, intend to notify the user of possible issues and, optimally, offer means to resolving issues. Indicating from where data is sourced and, where relevant, the business logic applied by the system to create the displayed data. Minimizing the possibility of human error. Use structured inputs wherever possible, reduce options to only those that are allowable by business rules, and offer rich type-ahead suggestions where a user needs more open-ended data entry or query. This principle requires system owners and designers to have thorough expertise in relevant technical orders and their system\u2019s contributing source systems. 3.1.3 Streamline Common Tasks and Analyses Making common tasks and analyses more efficient for the end user allows the system to maximize its value to the user and to the mission overall. The system\u2019s design should favor its users\u2019 most frequent needs by streamlining its flows and interfaces toward those ends. Some means toward that goal include: Emphasizing most commonly used functions. Allowing users to individually save settings, custom searches, and tool preferences. Providing smart defaults wherever possible. This ranges from pre-selecting the most common form field options to displaying the most commonly used features or sections upon initial login. Successfully following this principle requires comprehensively researching your users\u2019 intents and monitoring system usage. 3.1.4 Tailor Tasks and Interfaces to Roles Too often, DoD systems err by attempting to do everything for everyone, and by doing so, ultimately impede the mission. Offering users the right content and functionality for their needs and assignments is a meaningful way to support the above UX principles, but also to aid mission attainment. Ways to tailor the experience include: Emphasizing or exposing interfaces or portions of interfaces, especially for data entry and transactional functions, to only those user roles with a need and authority for said functionality. Designing task flows and interfaces so that they at a minimum support, but optimally increase the efficiency of, the larger assignment beyond the system for key end-user groups. Reducing data inputs, and options within those inputs, to only those that are meaningful and relevant to the user\u2019s role and their current context. 3.1.5 Provide Clear System Status Clear, consistent status indication and feedback is a certain measure for instilling trust in users and providing a sense of confidence and control within the system. With this sense of control, users do not have to split their attention between managing the system and contextualizing its responses and outputs, and can instead focus entirely on quickly and accurately accomplishing their end goal. A system should clearly report its status by: Indicating the recency and providing a detailed status of its source systems. Providing up-to-date context for the content and data presented by the system. Utilizing consistent enterprise metaphors for indicating status, such as stoplight coloring, at both the system and individual data record levels. Telling the user when it is busy processing their request, and, if the response is expected to take longer than a few seconds, offering an indication of how much longer the response will take or what percent of the process is complete. 3.1.6 Prioritize Alerts and Exceptions As the nature of many tasks within the logistics community includes attending to conspicuous, outlying data and \u201cgreening up\u201d problem areas, many users can greatly benefit by having these situations brought to their attention systematically, instead of by someone up or down the chain of command, or by hunting through data themselves. Where appropriate then, systems should prioritize alerts and exceptions to support this type of task by: Alerting users where problems may exist in the source data or in calculations made by the system with uncertain source data. Highlighting metrics that are below target goals, limits, or enterprise standards. Offering deeper assessments with explanations, breakdowns, or drivers of metrics and calculations. 3.1.7 Ensure Fast Findability Due to the inherent urgency of some mission support tasks, systems should be designed to allow users to quickly find information. Some means to assist this include: Providing smart defaults on interface configurations and search parameters. Tailoring data reports to include unrequested but meaningful supporting data alongside the user\u2019s requested information, sparing the user a second query or deeper analysis. Allowing users to individually save settings, custom searches, and tool preferences. Adhering to visual design best practices for clear presentation of content and data. 3.1.8 Reduce Reliance on Externalities Fragmented experiences are too often the norm, whether it be requiring users to jump between systems, or referencing paper documents or print materials. Pulling as much information and as many sub-tasks as makes sense into a user\u2019s primary system of need can consolidate work and reduce fragmentation. The end result is an allowance for the user to give more attention to their actual end goals and less on managing tools, thereby supporting the above principles of faster, more streamlined decision-making. Providing plain-text descriptions of acronyms and codes. Optimizing system task flows to seamlessly fit into larger external processes. Digitizing paper processes, especially where immediate transcription back into a digital system is expected.","title":"3.1 UX Principles"},{"location":"ux/3-1-principles/#31-ux-principles","text":"Establishing anchoring user experience principles allows us a mechanism to instill consistency across the breadth of USAF Logistics Information Systems\u2019 portfolio. These principles represent goals at a high, abstract level of the user\u2019s experience, but should be reflected in the design and execution of specific capabilities wherever applicable. In this way, we can know that even where specific interactions and interface components will differ per the respective requirements of a given system, as long as they are successfully fulfilling the same larger UX principle, an overarching consistency of purpose, experience, and mission support is being met. Referring to these principles consistently over time offers decision-making guidance, from strategic efforts (e.g. prioritizing features) to tactical execution (e.g. determining specific interactions and system flows). To best serve the logistics community and its missions, systems should adhere to the following eight interrelated UX principles:","title":"3.1 UX Principles"},{"location":"ux/3-1-principles/#311-enable-clear-and-immediate-decision-support","text":"Paramount to a system\u2019s ability to support its mission is highly effective user enablement, especially for logistics information systems in the area of decision-making. To that end, a system\u2019s design should first and foremost support this critical function. Proper enablement includes: Intuitive and easily repeatable task flows for arriving at decision-supporting information. Formatting and presenting decision-supporting information in a way that facilitates subsequent steps (either within or outside of the system). Providing appropriate descriptions, context, and caveats with data to better inform decision-making. Favoring recognition over recall by the user. The user can select from clearly presented options instead of recalling codes or meanings. Options are reduced to only those that are applicable in context. Plain-text descriptions are offered wherever data is coded. All of this requires that users and their key tasks and decisions are understood deeply by the system owners and designers.","title":"3.1.1 Enable Clear and Immediate Decision Support"},{"location":"ux/3-1-principles/#312-promote-data-integrity-and-accuracy","text":"Data lies at the heart of logistics information systems and processes. Faithful representation and management of this data, then, is crucial to mission success for their users. For users to have confidence in a system\u2019s data, they must understand how the system works. Further, a policy of data transparency will improve the data\u2019s accuracy over time and build trust in its systems. Enterprise-wide data integrity and accuracy can be ensured by: Never obscuring or correcting problematic source data. Instead, at a minimum, intend to notify the user of possible issues and, optimally, offer means to resolving issues. Indicating from where data is sourced and, where relevant, the business logic applied by the system to create the displayed data. Minimizing the possibility of human error. Use structured inputs wherever possible, reduce options to only those that are allowable by business rules, and offer rich type-ahead suggestions where a user needs more open-ended data entry or query. This principle requires system owners and designers to have thorough expertise in relevant technical orders and their system\u2019s contributing source systems.","title":"3.1.2 Promote Data Integrity and Accuracy"},{"location":"ux/3-1-principles/#313-streamline-common-tasks-and-analyses","text":"Making common tasks and analyses more efficient for the end user allows the system to maximize its value to the user and to the mission overall. The system\u2019s design should favor its users\u2019 most frequent needs by streamlining its flows and interfaces toward those ends. Some means toward that goal include: Emphasizing most commonly used functions. Allowing users to individually save settings, custom searches, and tool preferences. Providing smart defaults wherever possible. This ranges from pre-selecting the most common form field options to displaying the most commonly used features or sections upon initial login. Successfully following this principle requires comprehensively researching your users\u2019 intents and monitoring system usage.","title":"3.1.3 Streamline Common Tasks and Analyses"},{"location":"ux/3-1-principles/#314-tailor-tasks-and-interfaces-to-roles","text":"Too often, DoD systems err by attempting to do everything for everyone, and by doing so, ultimately impede the mission. Offering users the right content and functionality for their needs and assignments is a meaningful way to support the above UX principles, but also to aid mission attainment. Ways to tailor the experience include: Emphasizing or exposing interfaces or portions of interfaces, especially for data entry and transactional functions, to only those user roles with a need and authority for said functionality. Designing task flows and interfaces so that they at a minimum support, but optimally increase the efficiency of, the larger assignment beyond the system for key end-user groups. Reducing data inputs, and options within those inputs, to only those that are meaningful and relevant to the user\u2019s role and their current context.","title":"3.1.4 Tailor Tasks and Interfaces to Roles"},{"location":"ux/3-1-principles/#315-provide-clear-system-status","text":"Clear, consistent status indication and feedback is a certain measure for instilling trust in users and providing a sense of confidence and control within the system. With this sense of control, users do not have to split their attention between managing the system and contextualizing its responses and outputs, and can instead focus entirely on quickly and accurately accomplishing their end goal. A system should clearly report its status by: Indicating the recency and providing a detailed status of its source systems. Providing up-to-date context for the content and data presented by the system. Utilizing consistent enterprise metaphors for indicating status, such as stoplight coloring, at both the system and individual data record levels. Telling the user when it is busy processing their request, and, if the response is expected to take longer than a few seconds, offering an indication of how much longer the response will take or what percent of the process is complete.","title":"3.1.5 Provide Clear System Status"},{"location":"ux/3-1-principles/#316-prioritize-alerts-and-exceptions","text":"As the nature of many tasks within the logistics community includes attending to conspicuous, outlying data and \u201cgreening up\u201d problem areas, many users can greatly benefit by having these situations brought to their attention systematically, instead of by someone up or down the chain of command, or by hunting through data themselves. Where appropriate then, systems should prioritize alerts and exceptions to support this type of task by: Alerting users where problems may exist in the source data or in calculations made by the system with uncertain source data. Highlighting metrics that are below target goals, limits, or enterprise standards. Offering deeper assessments with explanations, breakdowns, or drivers of metrics and calculations.","title":"3.1.6 Prioritize Alerts and Exceptions"},{"location":"ux/3-1-principles/#317-ensure-fast-findability","text":"Due to the inherent urgency of some mission support tasks, systems should be designed to allow users to quickly find information. Some means to assist this include: Providing smart defaults on interface configurations and search parameters. Tailoring data reports to include unrequested but meaningful supporting data alongside the user\u2019s requested information, sparing the user a second query or deeper analysis. Allowing users to individually save settings, custom searches, and tool preferences. Adhering to visual design best practices for clear presentation of content and data.","title":"3.1.7 Ensure Fast Findability"},{"location":"ux/3-1-principles/#318-reduce-reliance-on-externalities","text":"Fragmented experiences are too often the norm, whether it be requiring users to jump between systems, or referencing paper documents or print materials. Pulling as much information and as many sub-tasks as makes sense into a user\u2019s primary system of need can consolidate work and reduce fragmentation. The end result is an allowance for the user to give more attention to their actual end goals and less on managing tools, thereby supporting the above principles of faster, more streamlined decision-making. Providing plain-text descriptions of acronyms and codes. Optimizing system task flows to seamlessly fit into larger external processes. Digitizing paper processes, especially where immediate transcription back into a digital system is expected.","title":"3.1.8 Reduce Reliance on Externalities"},{"location":"ux/3-2-methodology/","text":"3.2 UX Methodology Successful user experience design requires accomplishing a number of successive, iterative steps, each helping drive towards a higher level of specificity and fidelity than the prior.","title":"3.2 UX Methodology"},{"location":"ux/3-2-methodology/#32-ux-methodology","text":"Successful user experience design requires accomplishing a number of successive, iterative steps, each helping drive towards a higher level of specificity and fidelity than the prior.","title":"3.2 UX Methodology"},{"location":"ux/3-3-1-1-interviews/","text":"Back to Phase 1: Research & Discovery 3.3.1.1 Interviews Direct interviews are typically the single most effective method for uncovering insight. There are different types of interviews, each serving a different purpose. When to use Use interviews to examine users, subject matter experts or stakeholders closely, especially to: Investigate more deeply into users\u2019 needs or behaviors, e.g. motivations, expectations, concerns, and frustrations. Gain subject-matter expertise on mission current state, best practices, and problem articulation. Understand mission objectives, current opportunities and obstacles, and project success criteria. Requirements Access to actual end users. (User proxies, or representatives, can be helpful, but frequently do not have a full picture of real end users\u2019 process, context or usage scenarios.) Ability to record and transcribe later, or have a second team member listening for note taking. (It is generally inefficient to lead the interview while also taking notes.) Variations Contextual/field study versus direct discussion Contextual interviews are conducted in the environment in which the user would typically interact with your system (e.g. at their workplace), and generally involves the participant allowing the interviewer to watch them use the system for actual purposes (i.e. while \u201cdoing their day job\u201d). This method allows the interviewer to learn, from direct observation, about details that frequently go unaccounted for, or unremembered by the user when out of setting, such as necessary supplemental materials (e.g. a field manual kept next to the computer). It also allows for pain points that have been normalized by the user over time to be noticed and discussed. Inviting a participant to a direct session (either away from the user\u2019s work station or even just via a dedicated phone call or online meeting) can remove the burden and distraction of routine job obligations and keep the focus on your topics. Group versus individual Interviewing a large group of users together is best used to get a wide range of input quickly and a shallow exploration of the problem space. This method is best done as an initial session, prior to breaking out individual or small-group interviews. In individual interviews, topics can be explored in depth, without concern for a \u201cloudest voice\u201d or highest ranking presence inhibiting equitable input. Structured versus unstructured Structured interviews should be used when you have a specific set of questions to be addressed with your participant, especially when the ability to compare responses between multiple participants is desired. In unstructured interviews the topics are only broadly laid out. The interviewer does much more listening than interacting, sometimes speaking only to prompt the participant to continue or explain something further. These interviews are effective when the desire is to cover touchy subjects without directly asking about them, or to probe deeper emotional reactions by offering a neutral, safe conversational space. Product/output [Add links] Findings and even direct quotes from user interviews become the backbone of personas, user scenarios and user journeys, and drive the definition of use cases. Input from subject matter experts and stakeholders form the primary depiction of staff/support actions and processes in service blueprints and user journeys. References & Resources References Complete Beginner\u2019s Guide to UX Research \u2013 UX Booth Additional resources How to Conduct User Interviews \u2013 The Interaction Design Foundation Listening Tips \u2013 Indi Young","title":"Interviews"},{"location":"ux/3-3-1-1-interviews/#3311-interviews","text":"Direct interviews are typically the single most effective method for uncovering insight. There are different types of interviews, each serving a different purpose.","title":"3.3.1.1 Interviews"},{"location":"ux/3-3-1-1-interviews/#when-to-use","text":"Use interviews to examine users, subject matter experts or stakeholders closely, especially to: Investigate more deeply into users\u2019 needs or behaviors, e.g. motivations, expectations, concerns, and frustrations. Gain subject-matter expertise on mission current state, best practices, and problem articulation. Understand mission objectives, current opportunities and obstacles, and project success criteria.","title":"When to use"},{"location":"ux/3-3-1-1-interviews/#requirements","text":"Access to actual end users. (User proxies, or representatives, can be helpful, but frequently do not have a full picture of real end users\u2019 process, context or usage scenarios.) Ability to record and transcribe later, or have a second team member listening for note taking. (It is generally inefficient to lead the interview while also taking notes.)","title":"Requirements"},{"location":"ux/3-3-1-1-interviews/#variations","text":"","title":"Variations"},{"location":"ux/3-3-1-1-interviews/#contextualfield-study-versus-direct-discussion","text":"Contextual interviews are conducted in the environment in which the user would typically interact with your system (e.g. at their workplace), and generally involves the participant allowing the interviewer to watch them use the system for actual purposes (i.e. while \u201cdoing their day job\u201d). This method allows the interviewer to learn, from direct observation, about details that frequently go unaccounted for, or unremembered by the user when out of setting, such as necessary supplemental materials (e.g. a field manual kept next to the computer). It also allows for pain points that have been normalized by the user over time to be noticed and discussed. Inviting a participant to a direct session (either away from the user\u2019s work station or even just via a dedicated phone call or online meeting) can remove the burden and distraction of routine job obligations and keep the focus on your topics.","title":"Contextual/field study versus direct discussion"},{"location":"ux/3-3-1-1-interviews/#group-versus-individual","text":"Interviewing a large group of users together is best used to get a wide range of input quickly and a shallow exploration of the problem space. This method is best done as an initial session, prior to breaking out individual or small-group interviews. In individual interviews, topics can be explored in depth, without concern for a \u201cloudest voice\u201d or highest ranking presence inhibiting equitable input.","title":"Group versus individual"},{"location":"ux/3-3-1-1-interviews/#structured-versus-unstructured","text":"Structured interviews should be used when you have a specific set of questions to be addressed with your participant, especially when the ability to compare responses between multiple participants is desired. In unstructured interviews the topics are only broadly laid out. The interviewer does much more listening than interacting, sometimes speaking only to prompt the participant to continue or explain something further. These interviews are effective when the desire is to cover touchy subjects without directly asking about them, or to probe deeper emotional reactions by offering a neutral, safe conversational space.","title":"Structured versus unstructured"},{"location":"ux/3-3-1-1-interviews/#productoutput","text":"[Add links] Findings and even direct quotes from user interviews become the backbone of personas, user scenarios and user journeys, and drive the definition of use cases. Input from subject matter experts and stakeholders form the primary depiction of staff/support actions and processes in service blueprints and user journeys.","title":"Product/output"},{"location":"ux/3-3-1-1-interviews/#references-resources","text":"","title":"References &amp; Resources"},{"location":"ux/3-3-1-1-interviews/#references","text":"Complete Beginner\u2019s Guide to UX Research \u2013 UX Booth","title":"References"},{"location":"ux/3-3-1-1-interviews/#additional-resources","text":"How to Conduct User Interviews \u2013 The Interaction Design Foundation Listening Tips \u2013 Indi Young","title":"Additional resources"},{"location":"ux/3-3-1-2-surveys/","text":"Back to Phase 1: Research & Discovery 3.3.1.2 Surveys Conducting surveys is a simple, quick tool for gathering a large amount of input. And since this method is generally simpler and easier than others, it can frequently be a default recommendation. However, it is important to consider the advantages and limitations of surveying before selecting this method. When to use Use to quickly gather shallow feedback from a large number of respondents, or from a set of respondents who have anonymity concerns. Requirements Ability to distribute the survey to your desired participants. Ability to collect its results (if anonymous, a third party must be used). Variations Identified-response versus anonymous With identified-response surveys, the responses are tied to the identify of the responder, either through requiring the responder to provide that information, or by issuing uniquely identified surveys to each responder. This level of control can have a suppressing effect on the survey, both in terms of total responses, and in amount of honest criticism offered in answers. On the other hand, slanderous or other malevolent responses will be largely avoided. Be mindful of your subject matter and its prevailing sentiment among your audience. Identified-response surveys also have the advantage of optionally asking respondents to avail themselves for follow-up surveys or interviews. Anonymous surveys offer the ability to collect more honest responses when you expect the topic to skew negative, and will generally receive higher participation because of the lower responsibility or risk to the respondent. Product/output [links] Categorizing responses to open-ended questions can provide rough quantitative measures around frequency of similar responses. (For example, answers like \u201cSite is slow\u201d and \u201cPages take too long to load\u201d could both be categorized as \u201cSite performance does not meet expectations.\u201d) Close-ended questions frequently already lend themselves to this sort aggregate quantifying. This data can then provide support and evidence to personas and user scenarios, as well as help prioritize remediation efforts for major existing deficiencies. The individual open-ended responses themselves can uncover topics for follow-up user interview sessions around intents, motivations, and frustrations, especially if your survey\u2019s respondents allow their identities to be known and agree to participate further. Practical considerations Consider distributing the survey to a couple test participants prior to wider distribution, to uncover questions that can be misinterpreted and should be rewritten, and to ensure you receive the types of responses you are expecting. Ask questions that you have reason to believe your respondents are willing and able to answer sincerely. Be aware that requiring respondent identification will reduce your response rate. Avoid using Likert scales (i.e. 1-10 ratings) or similar structures for quantifying opinions. These tend to rely on subjective or arbitrary value assignments by your respondents, which devalues their responses. References & Resources References Online Surveys \u2013 usability.gov Complete Beginner\u2019s Guide to UX Research \u2013 UX Booth Additional resources On Surveys \u2013 Erika Hall","title":"Surveys"},{"location":"ux/3-3-1-2-surveys/#3312-surveys","text":"Conducting surveys is a simple, quick tool for gathering a large amount of input. And since this method is generally simpler and easier than others, it can frequently be a default recommendation. However, it is important to consider the advantages and limitations of surveying before selecting this method.","title":"3.3.1.2 Surveys"},{"location":"ux/3-3-1-2-surveys/#when-to-use","text":"Use to quickly gather shallow feedback from a large number of respondents, or from a set of respondents who have anonymity concerns.","title":"When to use"},{"location":"ux/3-3-1-2-surveys/#requirements","text":"Ability to distribute the survey to your desired participants. Ability to collect its results (if anonymous, a third party must be used).","title":"Requirements"},{"location":"ux/3-3-1-2-surveys/#variations","text":"","title":"Variations"},{"location":"ux/3-3-1-2-surveys/#identified-response-versus-anonymous","text":"With identified-response surveys, the responses are tied to the identify of the responder, either through requiring the responder to provide that information, or by issuing uniquely identified surveys to each responder. This level of control can have a suppressing effect on the survey, both in terms of total responses, and in amount of honest criticism offered in answers. On the other hand, slanderous or other malevolent responses will be largely avoided. Be mindful of your subject matter and its prevailing sentiment among your audience. Identified-response surveys also have the advantage of optionally asking respondents to avail themselves for follow-up surveys or interviews. Anonymous surveys offer the ability to collect more honest responses when you expect the topic to skew negative, and will generally receive higher participation because of the lower responsibility or risk to the respondent.","title":"Identified-response versus anonymous"},{"location":"ux/3-3-1-2-surveys/#productoutput","text":"[links] Categorizing responses to open-ended questions can provide rough quantitative measures around frequency of similar responses. (For example, answers like \u201cSite is slow\u201d and \u201cPages take too long to load\u201d could both be categorized as \u201cSite performance does not meet expectations.\u201d) Close-ended questions frequently already lend themselves to this sort aggregate quantifying. This data can then provide support and evidence to personas and user scenarios, as well as help prioritize remediation efforts for major existing deficiencies. The individual open-ended responses themselves can uncover topics for follow-up user interview sessions around intents, motivations, and frustrations, especially if your survey\u2019s respondents allow their identities to be known and agree to participate further.","title":"Product/output"},{"location":"ux/3-3-1-2-surveys/#practical-considerations","text":"Consider distributing the survey to a couple test participants prior to wider distribution, to uncover questions that can be misinterpreted and should be rewritten, and to ensure you receive the types of responses you are expecting. Ask questions that you have reason to believe your respondents are willing and able to answer sincerely. Be aware that requiring respondent identification will reduce your response rate. Avoid using Likert scales (i.e. 1-10 ratings) or similar structures for quantifying opinions. These tend to rely on subjective or arbitrary value assignments by your respondents, which devalues their responses.","title":"Practical considerations"},{"location":"ux/3-3-1-2-surveys/#references-resources","text":"","title":"References &amp; Resources"},{"location":"ux/3-3-1-2-surveys/#references","text":"Online Surveys \u2013 usability.gov Complete Beginner\u2019s Guide to UX Research \u2013 UX Booth","title":"References"},{"location":"ux/3-3-1-2-surveys/#additional-resources","text":"On Surveys \u2013 Erika Hall","title":"Additional resources"},{"location":"ux/3-3-1-3-metrics/","text":"Back to Phase 1: Research & Discovery 3.3.2.3 Site Metrics Analysis When a pre-existing capability is available in a live environment, and has an integrated data analytics tool, time should be spent assessing the data that has been captured to learn more about your users\u2019 actual usage and behavior patterns. When to use When a pre-existing capability is available in a live environment, and has an integrated data analytics tool, time should be spent assessing the data that has been captured to learn more about your users\u2019 actual usage and behavior patterns. Requirements Data captured through an analytics tool or similar. Product/output [Add links] Behavioral patterns discerned through metrics analysis can be used to: - Inform customer journeys and service design blueprints. - Provide quantitative support and evidence to personas or user scenarios. Practical considerations Look for click paths (page-to-page navigational flows) that have drop-offs or exits you would not expect, to identify pain points or unknown user intents. Carefully consider sample sizes and occurrence percentages to avoid fixating on edge cases. Avoid attempting to characterize user intent/goals solely by assessing their behavior. References & Resources 8 Usability Metrics Tech Teams Can Use To Analyze User Behaviour \u2013 Stephen Croome","title":"Site metrics analysis"},{"location":"ux/3-3-1-3-metrics/#3323-site-metrics-analysis","text":"When a pre-existing capability is available in a live environment, and has an integrated data analytics tool, time should be spent assessing the data that has been captured to learn more about your users\u2019 actual usage and behavior patterns.","title":"3.3.2.3 Site Metrics Analysis"},{"location":"ux/3-3-1-3-metrics/#when-to-use","text":"When a pre-existing capability is available in a live environment, and has an integrated data analytics tool, time should be spent assessing the data that has been captured to learn more about your users\u2019 actual usage and behavior patterns.","title":"When to use"},{"location":"ux/3-3-1-3-metrics/#requirements","text":"Data captured through an analytics tool or similar.","title":"Requirements"},{"location":"ux/3-3-1-3-metrics/#productoutput","text":"[Add links] Behavioral patterns discerned through metrics analysis can be used to: - Inform customer journeys and service design blueprints. - Provide quantitative support and evidence to personas or user scenarios.","title":"Product/output"},{"location":"ux/3-3-1-3-metrics/#practical-considerations","text":"Look for click paths (page-to-page navigational flows) that have drop-offs or exits you would not expect, to identify pain points or unknown user intents. Carefully consider sample sizes and occurrence percentages to avoid fixating on edge cases. Avoid attempting to characterize user intent/goals solely by assessing their behavior.","title":"Practical considerations"},{"location":"ux/3-3-1-3-metrics/#references-resources","text":"8 Usability Metrics Tech Teams Can Use To Analyze User Behaviour \u2013 Stephen Croome","title":"References &amp; Resources"},{"location":"ux/3-3-1-4-diary/","text":"Back to Phase 1: Research & Discovery 3.3.2.4 Diary Studies In this method, study participants are asked to keep a diary and log specific information over time about activities being studied. The diary itself can range from a simple paper journal to a digital recording device, and the input to be collected in the log entries can range from highly structured responses (like duration of the activity in seconds) to open-ended responses like detailed depictions of thoughts or emotions. When to use Use to collect qualitative data about user behaviors, activities and experiences over time, especially when field study or \u201cshadowing\u201d is not possible, such as when the duration of the activities to be studied is longer than a day or two, or involves the user traveling to multiple geographic locations, or requires round-the-clock monitoring. Requirements Access to actual end users who are willing to earnestly and accurately report their own thoughts and actions. A means of collecting diaries at the end of the reporting period. Product/output [links] Depending on the types of input your study requested of its participants, the diary entries can be decomposed and categorized or aggregated into quantitative measures to inform and support personas, or can be used for qualitative inputs to populate personas, user scenarios, journey maps and service design blueprints. Practical considerations Consider distributing the survey to a couple test participants prior to wider distribution, to uncover questions that can be misinterpreted and should be rewritten, and to ensure you receive the types of responses you are expecting. Ask questions that you have reason to believe your respondents are willing and able to answer sincerely. Be aware that requiring respondent identification will reduce your response rate. Avoid using Likert scales (i.e. 1-10 ratings) or similar structures for quantifying opinions. These tend to rely on subjective or arbitrary value assignments by your respondents, which devalues their responses. References & Resources Diary Studies: Understanding Long-Term User Behavior and Experiences \u2013 Nielsen Norman Group","title":"Diary studies"},{"location":"ux/3-3-1-4-diary/#3324-diary-studies","text":"In this method, study participants are asked to keep a diary and log specific information over time about activities being studied. The diary itself can range from a simple paper journal to a digital recording device, and the input to be collected in the log entries can range from highly structured responses (like duration of the activity in seconds) to open-ended responses like detailed depictions of thoughts or emotions.","title":"3.3.2.4 Diary Studies"},{"location":"ux/3-3-1-4-diary/#when-to-use","text":"Use to collect qualitative data about user behaviors, activities and experiences over time, especially when field study or \u201cshadowing\u201d is not possible, such as when the duration of the activities to be studied is longer than a day or two, or involves the user traveling to multiple geographic locations, or requires round-the-clock monitoring.","title":"When to use"},{"location":"ux/3-3-1-4-diary/#requirements","text":"Access to actual end users who are willing to earnestly and accurately report their own thoughts and actions. A means of collecting diaries at the end of the reporting period.","title":"Requirements"},{"location":"ux/3-3-1-4-diary/#productoutput","text":"[links] Depending on the types of input your study requested of its participants, the diary entries can be decomposed and categorized or aggregated into quantitative measures to inform and support personas, or can be used for qualitative inputs to populate personas, user scenarios, journey maps and service design blueprints.","title":"Product/output"},{"location":"ux/3-3-1-4-diary/#practical-considerations","text":"Consider distributing the survey to a couple test participants prior to wider distribution, to uncover questions that can be misinterpreted and should be rewritten, and to ensure you receive the types of responses you are expecting. Ask questions that you have reason to believe your respondents are willing and able to answer sincerely. Be aware that requiring respondent identification will reduce your response rate. Avoid using Likert scales (i.e. 1-10 ratings) or similar structures for quantifying opinions. These tend to rely on subjective or arbitrary value assignments by your respondents, which devalues their responses.","title":"Practical considerations"},{"location":"ux/3-3-1-4-diary/#references-resources","text":"Diary Studies: Understanding Long-Term User Behavior and Experiences \u2013 Nielsen Norman Group","title":"References &amp; Resources"},{"location":"ux/3-3-2-1-personas/","text":"Back to Phase 1: Research & Discovery 3.3.2.1 Personas Personas are realistic amalgamated representations of your key audience segments. Their humanistic details offer your team the ability to better empathize with your user types. They attempt to help your team understand, relate to, and remember the end user throughout the development process. When to use Use to humanize your users, especially in order to create rich scenarios and journey maps. Referring back to a well-crafted persona that contains specific human concerns and feelings, can help identify opportunities for your system to better match their needs. Requirements Deep understanding of your users, including an understanding of how to break them up into meaningfully different segments, from direct user input collected in your research. Product/output The output should be a single page or card, that fully characterizes its represented user segment, including goals and motivations, challenges and frustrations, behaviors and habits, attitudes and concerns. Personas are used as the insight to generate scenarios and journey maps that include a comprehensive user perspective. Practical considerations Avoid adding details to a persona when they are not relevant to helping achieve that user segment\u2019s goals. Examples could be demographic information like gender and age or lifestyle information like occupation or hobbies. In some instances, those details may be meaningful, but generally are not. Instead, those details allow for bias, unconscious or otherwise, to affect our consideration of the user segment. Write personas such that they are always sympathetic, meaning they are always able to elicit fondness and sympathy from your team. Creating opportunity for antagonism in a persona will only serve to alienate your team from a valid user segment. References Describing Personas \u2013 Indi Young Personas Make Users Memorable for Product Team Members \u2013 Nielsen Norman Group","title":"Personas"},{"location":"ux/3-3-2-1-personas/#3321-personas","text":"Personas are realistic amalgamated representations of your key audience segments. Their humanistic details offer your team the ability to better empathize with your user types. They attempt to help your team understand, relate to, and remember the end user throughout the development process.","title":"3.3.2.1 Personas"},{"location":"ux/3-3-2-1-personas/#when-to-use","text":"Use to humanize your users, especially in order to create rich scenarios and journey maps. Referring back to a well-crafted persona that contains specific human concerns and feelings, can help identify opportunities for your system to better match their needs.","title":"When to use"},{"location":"ux/3-3-2-1-personas/#requirements","text":"Deep understanding of your users, including an understanding of how to break them up into meaningfully different segments, from direct user input collected in your research.","title":"Requirements"},{"location":"ux/3-3-2-1-personas/#productoutput","text":"The output should be a single page or card, that fully characterizes its represented user segment, including goals and motivations, challenges and frustrations, behaviors and habits, attitudes and concerns. Personas are used as the insight to generate scenarios and journey maps that include a comprehensive user perspective.","title":"Product/output"},{"location":"ux/3-3-2-1-personas/#practical-considerations","text":"Avoid adding details to a persona when they are not relevant to helping achieve that user segment\u2019s goals. Examples could be demographic information like gender and age or lifestyle information like occupation or hobbies. In some instances, those details may be meaningful, but generally are not. Instead, those details allow for bias, unconscious or otherwise, to affect our consideration of the user segment. Write personas such that they are always sympathetic, meaning they are always able to elicit fondness and sympathy from your team. Creating opportunity for antagonism in a persona will only serve to alienate your team from a valid user segment.","title":"Practical considerations"},{"location":"ux/3-3-2-1-personas/#references","text":"Describing Personas \u2013 Indi Young Personas Make Users Memorable for Product Team Members \u2013 Nielsen Norman Group","title":"References"},{"location":"ux/3-3-2-2-scenarios/","text":"Back to Phase 1: Research & Discovery 3.3.2.2 User Scenarios User scenarios are essentially short expositions, used to explore why a specific user or user group would use your system within a narrow context and purpose. They detail the user\u2019s motivations, goals and concerns, and are perfect setups for journey maps. When comparing different scenarios that have the same user goals, opportunities for the system to be more helpful in accomplishing those goals can be discovered. When to use Use scenarios to explore how users might approach your system in specific contexts or environments. This exploration should foster insight into ways to optimize the system for these scenarios, thus increasing the value your system offers its users. Requirements Scenarios should be crafted around actual, real-world circumstances, and require realistic user perspectives. As such, having direct input from end users is crucial for accurate scenarios. Working from their actual stories, provided in interviews or even possibly surveys, grounds your scenarios in reality. While not a hard and fast requirement, starting from personas is a good way to ensure your scenarios are focused on your key user types and their needs. Product/output Scenarios are typically written as simple prose, like the start of a short story. They form the input for user journey maps, where the scenario can be played out and interactions with your system can be explored. Scenarios should also become the foundation of your concept testing and usability testing \u2013 having your test participants attempt to accomplish the goals laid out in your scenarios is an effective method of design validation. Tim is preparing to report at the quarterly WSR on his weapon system\u2019s availability in the previous quarter. When doing this analysis previously, he\u2019s relied on downloading ESR data then importing it into a spreadsheet created years ago by a colleague. This quarter, however, his CO has told him his analysis needs to go further and identify the 10 maintenance issues most limiting overall availability and at what locations they are most frequently occurring. This has Tim worried, as he doesn\u2019t believe he can break down the data and prepare it for presentation in the time he has before the conference.\u201d Practical considerations It\u2019s impossible to craft every scenario your users would have for using your system. Instead, start by drawing some of the most common scenarios out of your user research. Be willing to explore highly specific scenarios. Unexpected insights come from examining how your users\u2019 behaviors and needs change as their context does. Resources When It Comes To Personas, The Real Value Is In The Scenarios \u2013 UIE","title":"User Scenarios"},{"location":"ux/3-3-2-2-scenarios/#3322-user-scenarios","text":"User scenarios are essentially short expositions, used to explore why a specific user or user group would use your system within a narrow context and purpose. They detail the user\u2019s motivations, goals and concerns, and are perfect setups for journey maps. When comparing different scenarios that have the same user goals, opportunities for the system to be more helpful in accomplishing those goals can be discovered.","title":"3.3.2.2 User Scenarios"},{"location":"ux/3-3-2-2-scenarios/#when-to-use","text":"Use scenarios to explore how users might approach your system in specific contexts or environments. This exploration should foster insight into ways to optimize the system for these scenarios, thus increasing the value your system offers its users.","title":"When to use"},{"location":"ux/3-3-2-2-scenarios/#requirements","text":"Scenarios should be crafted around actual, real-world circumstances, and require realistic user perspectives. As such, having direct input from end users is crucial for accurate scenarios. Working from their actual stories, provided in interviews or even possibly surveys, grounds your scenarios in reality. While not a hard and fast requirement, starting from personas is a good way to ensure your scenarios are focused on your key user types and their needs.","title":"Requirements"},{"location":"ux/3-3-2-2-scenarios/#productoutput","text":"Scenarios are typically written as simple prose, like the start of a short story. They form the input for user journey maps, where the scenario can be played out and interactions with your system can be explored. Scenarios should also become the foundation of your concept testing and usability testing \u2013 having your test participants attempt to accomplish the goals laid out in your scenarios is an effective method of design validation. Tim is preparing to report at the quarterly WSR on his weapon system\u2019s availability in the previous quarter. When doing this analysis previously, he\u2019s relied on downloading ESR data then importing it into a spreadsheet created years ago by a colleague. This quarter, however, his CO has told him his analysis needs to go further and identify the 10 maintenance issues most limiting overall availability and at what locations they are most frequently occurring. This has Tim worried, as he doesn\u2019t believe he can break down the data and prepare it for presentation in the time he has before the conference.\u201d","title":"Product/output"},{"location":"ux/3-3-2-2-scenarios/#practical-considerations","text":"It\u2019s impossible to craft every scenario your users would have for using your system. Instead, start by drawing some of the most common scenarios out of your user research. Be willing to explore highly specific scenarios. Unexpected insights come from examining how your users\u2019 behaviors and needs change as their context does.","title":"Practical considerations"},{"location":"ux/3-3-2-2-scenarios/#resources","text":"When It Comes To Personas, The Real Value Is In The Scenarios \u2013 UIE","title":"Resources"},{"location":"ux/3-3-2-3-journey/","text":"Back to Phase 1: Research & Discovery 3.3.2.3 Journey Maps A journey map is a narrative-driven graph that describes the typical journey of an end user by representing the different touchpoints and interactions that encompass their experience with the system and surrounding environment. When to use Use journey maps to explore how users might use your system as part of accomplishing the goals laid out in specific scenarios. This exploration should foster insight into ways to optimize the system\u2019s design to best support these journeys, thus increasing the value your system offers its users. Requirements An understanding of meaningful scenarios to map, and the user insights to map them, from user research (interviews in particular). Product/output The map product is a timeline-based chart, typically split into two primary sections. The first section, the lens, depicts the user\u2019s perspective as they become oriented to the activities and requirements of each new stage of the journey. The journey section then captures the specific activities and interactions in which the user is involved at each stage, along with typical thoughts and feelings they might have along the way. This layer of thoughts and feelings provides context for ideas about better ways to support their experience. The process of depicting a user journey will uncover insights and opportunities to better align the current experience with user needs, or introduce new capabilities to fill gaps in the experience. These ideas should next be explored in conceptual designs, evaluated for feasibility, and finally be roadmapped for implementation. If the journey occurs as part of a larger service offering from your system, a next step could be exploring the full details of the service execution in a service design blueprint. Resources Journey Mapping in Real Life: A Survey of UX Practitioners \u2013 Nielsen Norman Group","title":"Journey maps"},{"location":"ux/3-3-2-3-journey/#3323-journey-maps","text":"A journey map is a narrative-driven graph that describes the typical journey of an end user by representing the different touchpoints and interactions that encompass their experience with the system and surrounding environment.","title":"3.3.2.3 Journey Maps"},{"location":"ux/3-3-2-3-journey/#when-to-use","text":"Use journey maps to explore how users might use your system as part of accomplishing the goals laid out in specific scenarios. This exploration should foster insight into ways to optimize the system\u2019s design to best support these journeys, thus increasing the value your system offers its users.","title":"When to use"},{"location":"ux/3-3-2-3-journey/#requirements","text":"An understanding of meaningful scenarios to map, and the user insights to map them, from user research (interviews in particular).","title":"Requirements"},{"location":"ux/3-3-2-3-journey/#productoutput","text":"The map product is a timeline-based chart, typically split into two primary sections. The first section, the lens, depicts the user\u2019s perspective as they become oriented to the activities and requirements of each new stage of the journey. The journey section then captures the specific activities and interactions in which the user is involved at each stage, along with typical thoughts and feelings they might have along the way. This layer of thoughts and feelings provides context for ideas about better ways to support their experience. The process of depicting a user journey will uncover insights and opportunities to better align the current experience with user needs, or introduce new capabilities to fill gaps in the experience. These ideas should next be explored in conceptual designs, evaluated for feasibility, and finally be roadmapped for implementation. If the journey occurs as part of a larger service offering from your system, a next step could be exploring the full details of the service execution in a service design blueprint.","title":"Product/output"},{"location":"ux/3-3-2-3-journey/#resources","text":"Journey Mapping in Real Life: A Survey of UX Practitioners \u2013 Nielsen Norman Group","title":"Resources"},{"location":"ux/3-3-2-4-blueprints/","text":"Back to Phase 1: Research & Discovery 3.3.2.4 Service Design Blueprints A service design blueprint is detailed diagram that captures key processes in the delivery of a service, starting from the end user\u2019s actions and system touchpoints and layering in the front- and backstage support personnel\u2019s tasks and roles and the additional systems that all ultimately enable the service. When to use Use blueprinting to model solutions that address specific process inefficiencies and pain points. This is especially useful in cases where a provided service is complex, such as when multiple support roles or systems are required to facilitate accomplishing the end user\u2019s goal. Requirements Service design blueprints work best when layered onto an existing journey map, but can be executed independently. A thorough understanding of the service delivery process is necessary to accurately capture it. Because complex services can require the efforts of a host of different support personnel and systems, elicit direct input from all participants through interviews or a collaborative workshop session. Product/output A service design blueprint should be a time-based diagram, with swim lanes for the end user\u2019s actions, system touchpoints, frontstage support personnel actions, backstage actions, and additional support processes/additional required systems. The detailed analysis inherit in creating a service blueprint will uncover gaps, inefficiencies, and pain points in your current service delivery model that your conceptual designs can address. Resources Service Blueprints: Laying the Foundation \u2013 Cooper The difference between a journey map and a service blueprint \u2013 Megan Erin Miller and Erik Flowers","title":"Service design blueprints"},{"location":"ux/3-3-2-4-blueprints/#3324-service-design-blueprints","text":"A service design blueprint is detailed diagram that captures key processes in the delivery of a service, starting from the end user\u2019s actions and system touchpoints and layering in the front- and backstage support personnel\u2019s tasks and roles and the additional systems that all ultimately enable the service.","title":"3.3.2.4 Service Design Blueprints"},{"location":"ux/3-3-2-4-blueprints/#when-to-use","text":"Use blueprinting to model solutions that address specific process inefficiencies and pain points. This is especially useful in cases where a provided service is complex, such as when multiple support roles or systems are required to facilitate accomplishing the end user\u2019s goal.","title":"When to use"},{"location":"ux/3-3-2-4-blueprints/#requirements","text":"Service design blueprints work best when layered onto an existing journey map, but can be executed independently. A thorough understanding of the service delivery process is necessary to accurately capture it. Because complex services can require the efforts of a host of different support personnel and systems, elicit direct input from all participants through interviews or a collaborative workshop session.","title":"Requirements"},{"location":"ux/3-3-2-4-blueprints/#productoutput","text":"A service design blueprint should be a time-based diagram, with swim lanes for the end user\u2019s actions, system touchpoints, frontstage support personnel actions, backstage actions, and additional support processes/additional required systems. The detailed analysis inherit in creating a service blueprint will uncover gaps, inefficiencies, and pain points in your current service delivery model that your conceptual designs can address.","title":"Product/output"},{"location":"ux/3-3-2-4-blueprints/#resources","text":"Service Blueprints: Laying the Foundation \u2013 Cooper The difference between a journey map and a service blueprint \u2013 Megan Erin Miller and Erik Flowers","title":"Resources"},{"location":"ux/3-3-2-5-usecase/","text":"Back to Phase 1: Research & Discovery 3.3.2.1 Use Cases A use case is a simple depiction of a sequence of actions in a system that result in a meaningful outcome for the actor (who is typically an end user of the system, but could also be support personnel in the case of a service). When to use Create use cases to identify and catalog all of the tasks and sub-tasks that the system needs to support in order to fulfill your users\u2019 needs within it. They can be derived by decomposing stakeholder requirements around system purpose and intent, or by decomposing journey maps into discrete tasks and system interactions. Product/output Use cases are typically written in a two-column format. The left column lists the intention of the actor and the right column lists the system's responsibilities and responses. In this way, the use case can resemble a dialogue between actor and system. Any prerequisites should be identified and noted. Use cases are good building blocks for user stories and helpful references while identifying a scope of work for a given sprint or release. Practical considerations \u2022 Use cases function most effectively when they are written simply, technology-free and implementation-agnostic. That is, they are written unaware of their eventual technical solutions. This keeps the focus on task accomplishment from the user\u2019s perspective, and keeps the cases relevant even as the system\u2019s technology and architecture change. References Essential (Abstract) Use Cases: An Agile Introduction \u2013 Agile Modeling","title":"Use cases"},{"location":"ux/3-3-2-5-usecase/#3321-use-cases","text":"A use case is a simple depiction of a sequence of actions in a system that result in a meaningful outcome for the actor (who is typically an end user of the system, but could also be support personnel in the case of a service).","title":"3.3.2.1 Use Cases"},{"location":"ux/3-3-2-5-usecase/#when-to-use","text":"Create use cases to identify and catalog all of the tasks and sub-tasks that the system needs to support in order to fulfill your users\u2019 needs within it. They can be derived by decomposing stakeholder requirements around system purpose and intent, or by decomposing journey maps into discrete tasks and system interactions.","title":"When to use"},{"location":"ux/3-3-2-5-usecase/#productoutput","text":"Use cases are typically written in a two-column format. The left column lists the intention of the actor and the right column lists the system's responsibilities and responses. In this way, the use case can resemble a dialogue between actor and system. Any prerequisites should be identified and noted. Use cases are good building blocks for user stories and helpful references while identifying a scope of work for a given sprint or release.","title":"Product/output"},{"location":"ux/3-3-2-5-usecase/#practical-considerations","text":"\u2022 Use cases function most effectively when they are written simply, technology-free and implementation-agnostic. That is, they are written unaware of their eventual technical solutions. This keeps the focus on task accomplishment from the user\u2019s perspective, and keeps the cases relevant even as the system\u2019s technology and architecture change.","title":"Practical considerations"},{"location":"ux/3-3-2-5-usecase/#references","text":"Essential (Abstract) Use Cases: An Agile Introduction \u2013 Agile Modeling","title":"References"},{"location":"ux/3-3-research/","text":"3.3 Phase 1: Research & Discovery \u201cUX without user research is not UX.\u201d \u2013 Nielsen Norman Group Designing a product or system that meets the needs of its users is simply not possible without first understanding those users. This principle is core to the purpose of user experience design. The research phase, then, is critical to success and becomes the foundation upon which design decisions should be made for a user-centered product. And while examining and understanding your users is the primary goal, comprehensive research should also include gaining a clear understanding of mission and stakeholder objectives and requirements, and in commercial settings, would also include market or landscape assessments. Successful designs bridge both user and stakeholder needs. The crux of conducting relevant, impactful research is having clear objectives at the outset. You should be setting these research objectives by having a clear purpose for how and where you intend to turn your research findings into inputs for later activities and methods. Only then can you know which research methods to employ and how best to employ them. In other words, start with the questions you wish to have answered and select methods best suited to answering them. Continue reading below to learn about some of the research methods most appropriate for logistics information systems and how they can be leveraged to inform subsequent work. 3.3.1 Methods for Gathering Information Interviews Direct communication in the form of interviews is a reliable way to gather user and business needs. Surveys Surveys are an easy way to gather a large amount of information in minimal time. Site metrics analysis Data-driven analysis of site usage and user behavior can provide important context and theory validation. Diary studies Logs of activities by users as they occur offer insights like context and environment details, real-time needs and behaviors. 3.3.2 Methods for Synthesizing Insights Personas Personas are realistic amalgamated representations of your key audience segments. Their humanistic details offer your team the ability to better empathize with your user types. User Scenarios These narratives explore why a specific user or user group would use your system within a narrow context and purpose, focusing on their motivations, goals, and concerns. Journey maps Visualizations that depict the typical journey for users accomplishing a task or going through a scenario, including their thoughts, system interactions, and reactions along the way. Service design blueprints Detailed diagrams that capture key processes in service delivery across all touchpoints, including the actions of the end user and the roles and tasks of any support personnel. Use cases As simple descriptions of a user\u2019s intent and the system\u2019s desired responses to satisfy, use cases help quickly catalog all of a system\u2019s necessary features and interactions. References UX Without User Research Is Not UX \u2013 Nielsen Norman Group","title":"3.3 Phase 1: Research & Discovery"},{"location":"ux/3-3-research/#33-phase-1-research-discovery","text":"\u201cUX without user research is not UX.\u201d \u2013 Nielsen Norman Group Designing a product or system that meets the needs of its users is simply not possible without first understanding those users. This principle is core to the purpose of user experience design. The research phase, then, is critical to success and becomes the foundation upon which design decisions should be made for a user-centered product. And while examining and understanding your users is the primary goal, comprehensive research should also include gaining a clear understanding of mission and stakeholder objectives and requirements, and in commercial settings, would also include market or landscape assessments. Successful designs bridge both user and stakeholder needs. The crux of conducting relevant, impactful research is having clear objectives at the outset. You should be setting these research objectives by having a clear purpose for how and where you intend to turn your research findings into inputs for later activities and methods. Only then can you know which research methods to employ and how best to employ them. In other words, start with the questions you wish to have answered and select methods best suited to answering them. Continue reading below to learn about some of the research methods most appropriate for logistics information systems and how they can be leveraged to inform subsequent work.","title":"3.3 Phase 1: Research &amp; Discovery"},{"location":"ux/3-3-research/#331-methods-for-gathering-information","text":"","title":"3.3.1 Methods for Gathering Information"},{"location":"ux/3-3-research/#interviews","text":"Direct communication in the form of interviews is a reliable way to gather user and business needs.","title":"Interviews"},{"location":"ux/3-3-research/#surveys","text":"Surveys are an easy way to gather a large amount of information in minimal time.","title":"Surveys"},{"location":"ux/3-3-research/#site-metrics-analysis","text":"Data-driven analysis of site usage and user behavior can provide important context and theory validation.","title":"Site metrics analysis"},{"location":"ux/3-3-research/#diary-studies","text":"Logs of activities by users as they occur offer insights like context and environment details, real-time needs and behaviors.","title":"Diary studies"},{"location":"ux/3-3-research/#332-methods-for-synthesizing-insights","text":"","title":"3.3.2 Methods for Synthesizing Insights"},{"location":"ux/3-3-research/#personas","text":"Personas are realistic amalgamated representations of your key audience segments. Their humanistic details offer your team the ability to better empathize with your user types.","title":"Personas"},{"location":"ux/3-3-research/#user-scenarios","text":"These narratives explore why a specific user or user group would use your system within a narrow context and purpose, focusing on their motivations, goals, and concerns.","title":"User Scenarios"},{"location":"ux/3-3-research/#journey-maps","text":"Visualizations that depict the typical journey for users accomplishing a task or going through a scenario, including their thoughts, system interactions, and reactions along the way.","title":"Journey maps"},{"location":"ux/3-3-research/#service-design-blueprints","text":"Detailed diagrams that capture key processes in service delivery across all touchpoints, including the actions of the end user and the roles and tasks of any support personnel.","title":"Service design blueprints"},{"location":"ux/3-3-research/#use-cases","text":"As simple descriptions of a user\u2019s intent and the system\u2019s desired responses to satisfy, use cases help quickly catalog all of a system\u2019s necessary features and interactions.","title":"Use cases"},{"location":"ux/3-3-research/#references","text":"UX Without User Research Is Not UX \u2013 Nielsen Norman Group","title":"References"},{"location":"ux/3-4-1-1-wireframe/","text":"Back to Phase 2: Conceptual Design 3.4.1.1 Wireframing/Sketching Low-fidelity wireframing or sketching is a method for quickly translating requirements into interface designs by using simple line drawings to depict the interface. The low fidelity is a feature, as it helps signify the design is in its early stages, and that adjusting to feedback at this stage is still very low-effort and anticipated. Product/output At the initial stage, the wireframes or sketches need only be detailed enough to communicate their intent. The larger goal is to explore a range of possibilities, not to explore the nuances of any single possibility. Resources How to design a low-fi wireframe \u2013 Creative Bloq","title":"Wireframing/sketching"},{"location":"ux/3-4-1-1-wireframe/#3411-wireframingsketching","text":"Low-fidelity wireframing or sketching is a method for quickly translating requirements into interface designs by using simple line drawings to depict the interface. The low fidelity is a feature, as it helps signify the design is in its early stages, and that adjusting to feedback at this stage is still very low-effort and anticipated.","title":"3.4.1.1 Wireframing/Sketching"},{"location":"ux/3-4-1-1-wireframe/#productoutput","text":"At the initial stage, the wireframes or sketches need only be detailed enough to communicate their intent. The larger goal is to explore a range of possibilities, not to explore the nuances of any single possibility.","title":"Product/output"},{"location":"ux/3-4-1-1-wireframe/#resources","text":"How to design a low-fi wireframe \u2013 Creative Bloq","title":"Resources"},{"location":"ux/3-4-1-2-ia/","text":"Back to Phase 2: Conceptual Design 3.4.1.2 Information Architecture Information architecture (IA) is the scheme and structure defining the organization of your system\u2019s content and features. An effective IA allows users to find information and complete tasks efficiently. Scheme refers to how content is categorized or segmented. Schemes can either be objective (e.g. alphabetical, or chronological), or subjective (e.g. by topic, or by audience type). Structure refers to the relationship between content. Two common structures are hierarchical (top-down), where initial categories are broad, and lead to more specific later categories; and sequential, where content is presented along a linear progression. Methods Cardsorting In this method, participants organize topics into categories that make sense to them. In an open card sort, the participants can assign their own labels to their groupings. In a closed sort, participants are only allowed to categorize within set categories. This method is an effective means of identifying or validating an appropriate topical architecture scheme. Tree testing To validate a hierarchical structure for your content, use tree testing. In this test, a participant is asked to choose a path along the hierarchy, or \u201ctree,\u201d they would follow in order to find a given piece of information. Practical considerations Consider long-term implications of your architecture. Future content additions should be easily placeable within the architecture. Avoid structures that make for very shallow schemes (i.e. many top-level categories) or very deep schemes (i.e. many levels of categorization). References & Resources References Complete Beginner\u2019s Guide to UX Research \u2013 UX Booth Organization Schemes \u2013 usability.gov Organization Structures \u2013 usability.gov Additional resources The Encyclopedia of Human-Computer Interaction, 2nd Ed. \u2013 Card Sorting \u2013 Interaction Design Foundation Tree Testing: Fast, Iterative Evaluation of Menu Labels and Categories \u2013 Nielsen Norman Group","title":"Information architecture"},{"location":"ux/3-4-1-2-ia/#3412-information-architecture","text":"Information architecture (IA) is the scheme and structure defining the organization of your system\u2019s content and features. An effective IA allows users to find information and complete tasks efficiently. Scheme refers to how content is categorized or segmented. Schemes can either be objective (e.g. alphabetical, or chronological), or subjective (e.g. by topic, or by audience type). Structure refers to the relationship between content. Two common structures are hierarchical (top-down), where initial categories are broad, and lead to more specific later categories; and sequential, where content is presented along a linear progression.","title":"3.4.1.2 Information Architecture"},{"location":"ux/3-4-1-2-ia/#methods","text":"","title":"Methods"},{"location":"ux/3-4-1-2-ia/#cardsorting","text":"In this method, participants organize topics into categories that make sense to them. In an open card sort, the participants can assign their own labels to their groupings. In a closed sort, participants are only allowed to categorize within set categories. This method is an effective means of identifying or validating an appropriate topical architecture scheme.","title":"Cardsorting"},{"location":"ux/3-4-1-2-ia/#tree-testing","text":"To validate a hierarchical structure for your content, use tree testing. In this test, a participant is asked to choose a path along the hierarchy, or \u201ctree,\u201d they would follow in order to find a given piece of information.","title":"Tree testing"},{"location":"ux/3-4-1-2-ia/#practical-considerations","text":"Consider long-term implications of your architecture. Future content additions should be easily placeable within the architecture. Avoid structures that make for very shallow schemes (i.e. many top-level categories) or very deep schemes (i.e. many levels of categorization).","title":"Practical considerations"},{"location":"ux/3-4-1-2-ia/#references-resources","text":"","title":"References &amp; Resources"},{"location":"ux/3-4-1-2-ia/#references","text":"Complete Beginner\u2019s Guide to UX Research \u2013 UX Booth Organization Schemes \u2013 usability.gov Organization Structures \u2013 usability.gov","title":"References"},{"location":"ux/3-4-1-2-ia/#additional-resources","text":"The Encyclopedia of Human-Computer Interaction, 2nd Ed. \u2013 Card Sorting \u2013 Interaction Design Foundation Tree Testing: Fast, Iterative Evaluation of Menu Labels and Categories \u2013 Nielsen Norman Group","title":"Additional resources"},{"location":"ux/3-4-1-3-participatory/","text":"Back to Phase 2: Conceptual Design 3.4.1.3 Participatory Design Participatory design is typically done in a group workshop setting but can ultimately take many forms and span a broad range of activities. The real constant is the involvement of \u201cnon-designers\u201d in idea generation. This direct collaboration with stakeholders, subject matter experts, and end users allows for ideas to be validated as they are created, speeding up the design process and increasing the chances of user adoption. When to use Use when you have access to subject matter experts or end users who are willing to engage in the design process, and preferably have some amount of stake in your design outcomes. Participating in the design can help develop a sense of ownership, so this method is particularly effective with end user of systems with smaller user communities. Offering your end users early investment and ownership in the process can also help reduce their resistance to the changes the designs will require of them, once implemented. Activities There is a large range of activities that can be conducted as part of a participatory design workshop. In fact, many of the methods covered in this playbook work well in a workshop session, such as journey mapping, service blueprinting and card sorting. As your participants are largely not going to immediately be comfortable taking on the role of \u201cdesigner,\u201d it\u2019s important that chosen activities grant them opportunities to participate in multiple ways. Further, the order of activities should prime your participants, such that they are introduced and immersed into the problem space, then subsequently given a chance to provide solutions. Practical considerations Limit workshops to about 4\u20135 activities over a few hours or less to keep participants focused. If the scope of design requires more time collaborating, consider splitting into multiple workshops by topic or theme. To ensure the session is productive, the facilitator should keep the group in agreement on meaningful insights and outcomes as they are generated. References Bringing Users into Your Process Through Participatory Design \u2013 David Sherwin and Erin Muntzert","title":"Participatory design"},{"location":"ux/3-4-1-3-participatory/#3413-participatory-design","text":"Participatory design is typically done in a group workshop setting but can ultimately take many forms and span a broad range of activities. The real constant is the involvement of \u201cnon-designers\u201d in idea generation. This direct collaboration with stakeholders, subject matter experts, and end users allows for ideas to be validated as they are created, speeding up the design process and increasing the chances of user adoption.","title":"3.4.1.3 Participatory Design"},{"location":"ux/3-4-1-3-participatory/#when-to-use","text":"Use when you have access to subject matter experts or end users who are willing to engage in the design process, and preferably have some amount of stake in your design outcomes. Participating in the design can help develop a sense of ownership, so this method is particularly effective with end user of systems with smaller user communities. Offering your end users early investment and ownership in the process can also help reduce their resistance to the changes the designs will require of them, once implemented.","title":"When to use"},{"location":"ux/3-4-1-3-participatory/#activities","text":"There is a large range of activities that can be conducted as part of a participatory design workshop. In fact, many of the methods covered in this playbook work well in a workshop session, such as journey mapping, service blueprinting and card sorting. As your participants are largely not going to immediately be comfortable taking on the role of \u201cdesigner,\u201d it\u2019s important that chosen activities grant them opportunities to participate in multiple ways. Further, the order of activities should prime your participants, such that they are introduced and immersed into the problem space, then subsequently given a chance to provide solutions.","title":"Activities"},{"location":"ux/3-4-1-3-participatory/#practical-considerations","text":"Limit workshops to about 4\u20135 activities over a few hours or less to keep participants focused. If the scope of design requires more time collaborating, consider splitting into multiple workshops by topic or theme. To ensure the session is productive, the facilitator should keep the group in agreement on meaningful insights and outcomes as they are generated.","title":"Practical considerations"},{"location":"ux/3-4-1-3-participatory/#references","text":"Bringing Users into Your Process Through Participatory Design \u2013 David Sherwin and Erin Muntzert","title":"References"},{"location":"ux/3-4-1-4-concept/","text":"Back to Phase 2: Conceptual Design 3.4.1.4 Concept Testing Testing early and often is the most certain way to ensure the ultimately implemented solution completely meets your users\u2019 needs. To that end, testing should commence as soon as concepts are ready. When to use Start validating with end users as soon as conceptual designs are mature enough to demonstrate their intent. With this type of testing, early beats late in terms of benefit. Since the conceptual phase typically revolves around exploring a range of solutions, this phase of testing functions well as a means of identifying \u201cbest of breed\u201d ideas that warrant further pursuit. Requirements Designs that are meant to fulfill at least one complete user task. Access to end users willing to validate the designs. A test script or plan, for the participant to follow, that covers the user tasks the designs fulfill. An ability to collect feedback. Practical considerations See usability testing Resources Paper Prototyping: Getting User Data Before You Code \u2013 Nielsen Norman Group","title":"Concept testing"},{"location":"ux/3-4-1-4-concept/#3414-concept-testing","text":"Testing early and often is the most certain way to ensure the ultimately implemented solution completely meets your users\u2019 needs. To that end, testing should commence as soon as concepts are ready.","title":"3.4.1.4 Concept Testing"},{"location":"ux/3-4-1-4-concept/#when-to-use","text":"Start validating with end users as soon as conceptual designs are mature enough to demonstrate their intent. With this type of testing, early beats late in terms of benefit. Since the conceptual phase typically revolves around exploring a range of solutions, this phase of testing functions well as a means of identifying \u201cbest of breed\u201d ideas that warrant further pursuit.","title":"When to use"},{"location":"ux/3-4-1-4-concept/#requirements","text":"Designs that are meant to fulfill at least one complete user task. Access to end users willing to validate the designs. A test script or plan, for the participant to follow, that covers the user tasks the designs fulfill. An ability to collect feedback.","title":"Requirements"},{"location":"ux/3-4-1-4-concept/#practical-considerations","text":"See usability testing","title":"Practical considerations"},{"location":"ux/3-4-1-4-concept/#resources","text":"Paper Prototyping: Getting User Data Before You Code \u2013 Nielsen Norman Group","title":"Resources"},{"location":"ux/3-4-2-1-roadmapping/","text":"Back to Phase 2: Conceptual Design 3.4.2.1 Roadmapping The process of roadmapping is done to translate the totality of the collected requirements and conceptual design direction into an actionable plan for phased implementation. First, the requirements and designs are decomposed into an itemization of features and development efforts. Each item is then prioritized by assessing a combination of its user value, organizational value and implementation readiness. Finally, the prioritized items are strategically grouped and sequenced into releases that deliver the greatest incremental value to all parties. When to use Use roadmapping when the scope of the designed solution looks likely to exceed the capacity of a single development increment (release or similar), or valuable features require additional planning and preparation to be ready to implement. Requirements An itemization of designed features to be roadmapped. Stakeholder input on user and business value, and implementation readiness, of itemized features. Participation from all disciplines, from product ownership through the development team, to ensure the targets are realistic. Product/output The roadmap itself can take many forms, but a common one is a timeline-based chart that reflects the team\u2019s plan for implementation. It shows a target execution period or completion date for each thread of currently identified and prioritized features. Resources Roadmap Basics \u2013 ProductPlan","title":"Roadmapping"},{"location":"ux/3-4-2-1-roadmapping/#3421-roadmapping","text":"The process of roadmapping is done to translate the totality of the collected requirements and conceptual design direction into an actionable plan for phased implementation. First, the requirements and designs are decomposed into an itemization of features and development efforts. Each item is then prioritized by assessing a combination of its user value, organizational value and implementation readiness. Finally, the prioritized items are strategically grouped and sequenced into releases that deliver the greatest incremental value to all parties.","title":"3.4.2.1 Roadmapping"},{"location":"ux/3-4-2-1-roadmapping/#when-to-use","text":"Use roadmapping when the scope of the designed solution looks likely to exceed the capacity of a single development increment (release or similar), or valuable features require additional planning and preparation to be ready to implement.","title":"When to use"},{"location":"ux/3-4-2-1-roadmapping/#requirements","text":"An itemization of designed features to be roadmapped. Stakeholder input on user and business value, and implementation readiness, of itemized features. Participation from all disciplines, from product ownership through the development team, to ensure the targets are realistic.","title":"Requirements"},{"location":"ux/3-4-2-1-roadmapping/#productoutput","text":"The roadmap itself can take many forms, but a common one is a timeline-based chart that reflects the team\u2019s plan for implementation. It shows a target execution period or completion date for each thread of currently identified and prioritized features.","title":"Product/output"},{"location":"ux/3-4-2-1-roadmapping/#resources","text":"Roadmap Basics \u2013 ProductPlan","title":"Resources"},{"location":"ux/3-4-2-2-story/","text":"Back to Phase 2: Conceptual Design 3.4.2.2 Story Writing Story writing is the process of breaking down a feature or group of features that are to be built into discrete, achieveable implementation tasks. In Agile terminology, a story may be also called a Product Backlog Item. The term \u201cstory\u201d is frequently used, however, because of the important notion that these implementation tasks be oriented around the user and achieving value for the user. Thus, the task is very loosely written in the format of a \u201cstory\u201d of which the target user is the main character. Use cases are ideal building blocks for stories. The user\u2019s need becomes the focus of the story. The sequence of actions, and the system functionality necessary to support those actions, form the basis for the story\u2019s acceptance criteria. Product/output A typical user story starts with a statement in the format of \u201cAs a [user type], I need [functionality] so that [goal/task to be accomplished].\u201d From there, additional description can be included, as well as any already defined requirements, conceptual designs for fulfilling the identified user need, and known technological leverage or constraint. As the story matures as is prepped for execution, complete requirements, in the form of acceptance criteria, should be captured and included. These acceptance criteria should form the basis for later quality assurance, including acceptance testing. Practical considerations Stories are best written and reviewed by the entire team, across disciplines. Stories can be split into experience-led and technology-led versions if implementation efficiencies will be gained by doing so. Initially, the story should have little clarity around how the need it raises will be fulfilled. In other words, the story identifies the problem, but not its solution. Resources User Stories: An Agile Introduction \u2013 Agile Modeling","title":"Story writing"},{"location":"ux/3-4-2-2-story/#3422-story-writing","text":"Story writing is the process of breaking down a feature or group of features that are to be built into discrete, achieveable implementation tasks. In Agile terminology, a story may be also called a Product Backlog Item. The term \u201cstory\u201d is frequently used, however, because of the important notion that these implementation tasks be oriented around the user and achieving value for the user. Thus, the task is very loosely written in the format of a \u201cstory\u201d of which the target user is the main character. Use cases are ideal building blocks for stories. The user\u2019s need becomes the focus of the story. The sequence of actions, and the system functionality necessary to support those actions, form the basis for the story\u2019s acceptance criteria.","title":"3.4.2.2 Story Writing"},{"location":"ux/3-4-2-2-story/#productoutput","text":"A typical user story starts with a statement in the format of \u201cAs a [user type], I need [functionality] so that [goal/task to be accomplished].\u201d From there, additional description can be included, as well as any already defined requirements, conceptual designs for fulfilling the identified user need, and known technological leverage or constraint. As the story matures as is prepped for execution, complete requirements, in the form of acceptance criteria, should be captured and included. These acceptance criteria should form the basis for later quality assurance, including acceptance testing.","title":"Product/output"},{"location":"ux/3-4-2-2-story/#practical-considerations","text":"Stories are best written and reviewed by the entire team, across disciplines. Stories can be split into experience-led and technology-led versions if implementation efficiencies will be gained by doing so. Initially, the story should have little clarity around how the need it raises will be fulfilled. In other words, the story identifies the problem, but not its solution.","title":"Practical considerations"},{"location":"ux/3-4-2-2-story/#resources","text":"User Stories: An Agile Introduction \u2013 Agile Modeling","title":"Resources"},{"location":"ux/3-4-conceptual/","text":"3.4 Phase 2: Conceptual Design Once the research and discovery work has provided a clear understanding of the problem space and your target users, the next step is translating those insights into a range of testable concepts for a system architecture and initial, low-fidelity interface designs; validating and honing in on the most successful concepts (eventually narrowing to the single best concept); and finally devising a workable strategy for implementation of the selected direction. 3.4.1 Activities for Conceptual Design Wireframing/sketching Using quick, low-fidelity drawings helps explore a broader range of potential solutions in less time. Information architecture Create an organizational structure for your system\u2019s features and content in ways that are most meaningful to your users. Participatory design Collaborating on initial design with subject matter experts and end users reduces risk and rework. Concept testing Test early concepts with actual users to gauge effectiveness. 3.4.2 Methods for Strategic Planning Roadmapping A strategic roadmap provides the team alignment on a plan for implementation. Story writing Break up requirements and conceptual designs into discrete, independently executable pieces.","title":"3.4 Phase 2: Conceptual Design"},{"location":"ux/3-4-conceptual/#34-phase-2-conceptual-design","text":"Once the research and discovery work has provided a clear understanding of the problem space and your target users, the next step is translating those insights into a range of testable concepts for a system architecture and initial, low-fidelity interface designs; validating and honing in on the most successful concepts (eventually narrowing to the single best concept); and finally devising a workable strategy for implementation of the selected direction.","title":"3.4 Phase 2: Conceptual Design"},{"location":"ux/3-4-conceptual/#341-activities-for-conceptual-design","text":"","title":"3.4.1 Activities for Conceptual Design"},{"location":"ux/3-4-conceptual/#wireframingsketching","text":"Using quick, low-fidelity drawings helps explore a broader range of potential solutions in less time.","title":"Wireframing/sketching"},{"location":"ux/3-4-conceptual/#information-architecture","text":"Create an organizational structure for your system\u2019s features and content in ways that are most meaningful to your users.","title":"Information architecture"},{"location":"ux/3-4-conceptual/#participatory-design","text":"Collaborating on initial design with subject matter experts and end users reduces risk and rework.","title":"Participatory design"},{"location":"ux/3-4-conceptual/#concept-testing","text":"Test early concepts with actual users to gauge effectiveness.","title":"Concept testing"},{"location":"ux/3-4-conceptual/#342-methods-for-strategic-planning","text":"","title":"3.4.2 Methods for Strategic Planning"},{"location":"ux/3-4-conceptual/#roadmapping","text":"A strategic roadmap provides the team alignment on a plan for implementation.","title":"Roadmapping"},{"location":"ux/3-4-conceptual/#story-writing","text":"Break up requirements and conceptual designs into discrete, independently executable pieces.","title":"Story writing"},{"location":"ux/3-5-1-1-visualdesign/","text":"Back to Phase 3: Detailed Design 3.5.1.1 High-Fidelity Wireframing & Visual Design High-fidelity wireframing and the creation of visual design comps are activities done to create a fully detailed articulation of the interface (plus all its attendant states necessary to support a functionality). Like low-fidelity wireframes, high-fidelity wireframes are still mostly line renderings representing the interface. But the additional detail at this stage should offer language, labels and fully depicted interactions including success and error cases, and provide guidance for how to handle not just primary use cases but also all edge cases. Visual design comps should offer presentation details such as how individual components should be visually styled, and how the components relate to one another in the interface. Requirements A determination of which conceptual design direction to pursue in detail. A scope of design work to be detailed, in user stories or similar. Product/output High-fidelity wireframes and comps serve as the foundation for communicating the final design. For lean documentation practices and usability testing, these artifacts will serve as the design source for a prototype. They also serve as the source material for writing full developer specifications. Practical considerations Visual design comps can organize the interface differently than the wireframes, so long as there is no contradiction between the two. In cases where the comps do not match the wireframes exactly, the comps should be followed for form and the wireframes should be followed for function. Frequently high-fidelity wireframes and visual design comps are created in parallel, and help inform one another. In this process, the best ideas from each are combined in the final solution. Resources What is Interaction Design? \u2013 Interaction Design Foundation Adaptive vs. Responsive Design \u2013 Interaction Design Foundation http://isobar-us.github.io/USAF-2212-A4UX-Playbook","title":"High-fidelity wireframing and visual design"},{"location":"ux/3-5-1-1-visualdesign/#3511-high-fidelity-wireframing-visual-design","text":"High-fidelity wireframing and the creation of visual design comps are activities done to create a fully detailed articulation of the interface (plus all its attendant states necessary to support a functionality). Like low-fidelity wireframes, high-fidelity wireframes are still mostly line renderings representing the interface. But the additional detail at this stage should offer language, labels and fully depicted interactions including success and error cases, and provide guidance for how to handle not just primary use cases but also all edge cases. Visual design comps should offer presentation details such as how individual components should be visually styled, and how the components relate to one another in the interface.","title":"3.5.1.1 High-Fidelity Wireframing &amp; Visual Design"},{"location":"ux/3-5-1-1-visualdesign/#requirements","text":"A determination of which conceptual design direction to pursue in detail. A scope of design work to be detailed, in user stories or similar.","title":"Requirements"},{"location":"ux/3-5-1-1-visualdesign/#productoutput","text":"High-fidelity wireframes and comps serve as the foundation for communicating the final design. For lean documentation practices and usability testing, these artifacts will serve as the design source for a prototype. They also serve as the source material for writing full developer specifications.","title":"Product/output"},{"location":"ux/3-5-1-1-visualdesign/#practical-considerations","text":"Visual design comps can organize the interface differently than the wireframes, so long as there is no contradiction between the two. In cases where the comps do not match the wireframes exactly, the comps should be followed for form and the wireframes should be followed for function. Frequently high-fidelity wireframes and visual design comps are created in parallel, and help inform one another. In this process, the best ideas from each are combined in the final solution.","title":"Practical considerations"},{"location":"ux/3-5-1-1-visualdesign/#resources","text":"What is Interaction Design? \u2013 Interaction Design Foundation Adaptive vs. Responsive Design \u2013 Interaction Design Foundation http://isobar-us.github.io/USAF-2212-A4UX-Playbook","title":"Resources"},{"location":"ux/3-5-1-2-prototyping/","text":"Back to Phase 3: Detailed Design 3.5.1.2 Prototyping A prototype is a simulation of the intended presentation and functionality of the system. It allows user validation prior to committing to build, and demonstrates its intended functionality to the development team. In the detailed design phase, a prototype would typically be based on high-fidelity wireframes or comps. Requirements High-fidelity wireframes or comps to act as source material. Use cases the prototype is meant to simulate. User stories or similar for detailed requirements or acceptance criteria the prototype should follow. Product/output A high-fidelity prototype should be digital and interactive, even if only for highly specific click-paths. The fidelity at this point should be close enough to an exact representation of the intended final product, that testing of the prototype should result in reasonably accurate user performance data (e.g. time to perform a given task). Practical considerations If usability testing goals do not require the prototype to dynamically respond to user inputs, a prototype comprised simply of clickable static interface images (i.e. visual design comps) can suffice. It is generally better to prototype small units of an experience such as key pages, sections or features than to manage one comprehensive prototype. This keeps prototypes manageable and focused, and minimizes need for additional time in refactoring patterns and interactions across a larger whole, especially when the delivery focus is narrower. References Prototyping \u2013 usability.gov","title":"Prototyping"},{"location":"ux/3-5-1-2-prototyping/#3512-prototyping","text":"A prototype is a simulation of the intended presentation and functionality of the system. It allows user validation prior to committing to build, and demonstrates its intended functionality to the development team. In the detailed design phase, a prototype would typically be based on high-fidelity wireframes or comps.","title":"3.5.1.2 Prototyping"},{"location":"ux/3-5-1-2-prototyping/#requirements","text":"High-fidelity wireframes or comps to act as source material. Use cases the prototype is meant to simulate. User stories or similar for detailed requirements or acceptance criteria the prototype should follow.","title":"Requirements"},{"location":"ux/3-5-1-2-prototyping/#productoutput","text":"A high-fidelity prototype should be digital and interactive, even if only for highly specific click-paths. The fidelity at this point should be close enough to an exact representation of the intended final product, that testing of the prototype should result in reasonably accurate user performance data (e.g. time to perform a given task).","title":"Product/output"},{"location":"ux/3-5-1-2-prototyping/#practical-considerations","text":"If usability testing goals do not require the prototype to dynamically respond to user inputs, a prototype comprised simply of clickable static interface images (i.e. visual design comps) can suffice. It is generally better to prototype small units of an experience such as key pages, sections or features than to manage one comprehensive prototype. This keeps prototypes manageable and focused, and minimizes need for additional time in refactoring patterns and interactions across a larger whole, especially when the delivery focus is narrower.","title":"Practical considerations"},{"location":"ux/3-5-1-2-prototyping/#references","text":"Prototyping \u2013 usability.gov","title":"References"},{"location":"ux/3-5-1-3-usability/","text":"Back to Phase 3: Detailed Design 3.5.1.3 Usability Testing Compared to earlier concept testing, the testing done at this phase should not be centered on exploring solutions so much as refining and optimizing specifics. In much the same fashion as earlier testing, however, participants should be given scenarios or tasks, and asked to complete them through use of the prototyped interfaces, while also thinking aloud to express their thoughts and feelings of the experience as they proceed. Requirements A test script based on real scenarios or use cases. A prototype that allows for the completion of the tasks in the test script. The ability to recruit target end users to participate. An ability to record the tests, or to take careful notes during the sessions. Variations Moderated versus unmoderated With moderated testing, a moderator sits with the participant to guide the session. This involves giving the participant an introduction to the test and its goals, then giving tasks to the tester as the session progresses, prompting the user to explain their thoughts and actions, and helping prevent the tester from getting completely off track. In this method, the moderator must be careful to avoid offering any guidance on how to complete the test tasks, even if the tester begs off a difficult task, until the entire test is done. If the tester has veered so far off as to make their continuation unproductive, the moderator may elect to gently direct the tester to start over or move to the next task. The moderator must also be extremely careful not to ask leading or biased questions about the design in an attempt to elicit specific feedback. The moderator should exhibit neutral attitudes regarding the design and the test tasks. In unmoderated testing, the efficacy of the test relies on the participants to clearly understand the goals of the test and their instructions for properly participating, including a desire to have them continuously thinking aloud for the duration of the session. Because that behavior is fairly unnatural, it is easily forgotten about when attempting a particularly challenging task, which is exactly when that vocalization is most beneficial to the design team. Unmoderated testing is typically done via an online testing tool, where the test can be done at the participant\u2019s convenience on their own computer, which makes participation easier. Formal versus informal/guerilla In formal testing, the test is conducted in a lab setting with a moderator on hand to lead the sessions. In highly formal lab settings, there is frequently an observation area separated from the test area by a one-way mirror. This keeps the participant and moderator able to focus on the test, while allowing stakeholders and other team members to observe the sessions firsthand. Formal settings often have advanced technologies for recording the test, including video of the participant, screen capture of the participant\u2019s on-screen actions, and even eye tracking. In this way, formal tests can yield highly nuanced findings. Informal or guerilla-style testing is conducted in any environment where testers can find participants. This can be simply at the participant\u2019s desk, or a conference room. The test need not be conducted in a highly controlled setting in order to elicit meaningful feedback. Product/output Ideally, your setup allows for a recording of the test sessions (most importantly audio recording and screen capture) for later analysis and detailed reporting. If that is not possible, having someone available to take notes during the sessions, such as key quotes from the testers and details around specific difficulties, will suffice. The findings should inform iterations of the detailed designs and prototype, and a repeat of testing until the designs satisfy user needs. Practical considerations Make sure the test participants are made aware that they are not being tested \u2013 the effectiveness of the design is. Any difficulty the participant has completing the test script is a reflection of a deficient design, not of their abilities. If recording is not available, make sure there is a second person available to take notes. The moderator should be able to focus on the participant and their test tasks, not on documenting findings. References & Resources References Running a Usability Test \u2013 usability.gov Complete Beginner\u2019s Guide to UX Research \u2013 UX Booth Additional resources Selecting an Online Tool for Unmoderated Remote User Testing \u2013 Nielsen Norman Group","title":"Usability testing"},{"location":"ux/3-5-1-3-usability/#3513-usability-testing","text":"Compared to earlier concept testing, the testing done at this phase should not be centered on exploring solutions so much as refining and optimizing specifics. In much the same fashion as earlier testing, however, participants should be given scenarios or tasks, and asked to complete them through use of the prototyped interfaces, while also thinking aloud to express their thoughts and feelings of the experience as they proceed.","title":"3.5.1.3 Usability Testing"},{"location":"ux/3-5-1-3-usability/#requirements","text":"A test script based on real scenarios or use cases. A prototype that allows for the completion of the tasks in the test script. The ability to recruit target end users to participate. An ability to record the tests, or to take careful notes during the sessions.","title":"Requirements"},{"location":"ux/3-5-1-3-usability/#variations","text":"","title":"Variations"},{"location":"ux/3-5-1-3-usability/#moderated-versus-unmoderated","text":"With moderated testing, a moderator sits with the participant to guide the session. This involves giving the participant an introduction to the test and its goals, then giving tasks to the tester as the session progresses, prompting the user to explain their thoughts and actions, and helping prevent the tester from getting completely off track. In this method, the moderator must be careful to avoid offering any guidance on how to complete the test tasks, even if the tester begs off a difficult task, until the entire test is done. If the tester has veered so far off as to make their continuation unproductive, the moderator may elect to gently direct the tester to start over or move to the next task. The moderator must also be extremely careful not to ask leading or biased questions about the design in an attempt to elicit specific feedback. The moderator should exhibit neutral attitudes regarding the design and the test tasks. In unmoderated testing, the efficacy of the test relies on the participants to clearly understand the goals of the test and their instructions for properly participating, including a desire to have them continuously thinking aloud for the duration of the session. Because that behavior is fairly unnatural, it is easily forgotten about when attempting a particularly challenging task, which is exactly when that vocalization is most beneficial to the design team. Unmoderated testing is typically done via an online testing tool, where the test can be done at the participant\u2019s convenience on their own computer, which makes participation easier.","title":"Moderated versus unmoderated"},{"location":"ux/3-5-1-3-usability/#formal-versus-informalguerilla","text":"In formal testing, the test is conducted in a lab setting with a moderator on hand to lead the sessions. In highly formal lab settings, there is frequently an observation area separated from the test area by a one-way mirror. This keeps the participant and moderator able to focus on the test, while allowing stakeholders and other team members to observe the sessions firsthand. Formal settings often have advanced technologies for recording the test, including video of the participant, screen capture of the participant\u2019s on-screen actions, and even eye tracking. In this way, formal tests can yield highly nuanced findings. Informal or guerilla-style testing is conducted in any environment where testers can find participants. This can be simply at the participant\u2019s desk, or a conference room. The test need not be conducted in a highly controlled setting in order to elicit meaningful feedback.","title":"Formal versus informal/guerilla"},{"location":"ux/3-5-1-3-usability/#productoutput","text":"Ideally, your setup allows for a recording of the test sessions (most importantly audio recording and screen capture) for later analysis and detailed reporting. If that is not possible, having someone available to take notes during the sessions, such as key quotes from the testers and details around specific difficulties, will suffice. The findings should inform iterations of the detailed designs and prototype, and a repeat of testing until the designs satisfy user needs.","title":"Product/output"},{"location":"ux/3-5-1-3-usability/#practical-considerations","text":"Make sure the test participants are made aware that they are not being tested \u2013 the effectiveness of the design is. Any difficulty the participant has completing the test script is a reflection of a deficient design, not of their abilities. If recording is not available, make sure there is a second person available to take notes. The moderator should be able to focus on the participant and their test tasks, not on documenting findings.","title":"Practical considerations"},{"location":"ux/3-5-1-3-usability/#references-resources","text":"","title":"References &amp; Resources"},{"location":"ux/3-5-1-3-usability/#references","text":"Running a Usability Test \u2013 usability.gov Complete Beginner\u2019s Guide to UX Research \u2013 UX Booth","title":"References"},{"location":"ux/3-5-1-3-usability/#additional-resources","text":"Selecting an Online Tool for Unmoderated Remote User Testing \u2013 Nielsen Norman Group","title":"Additional resources"},{"location":"ux/3-5-1-4-annotating/","text":"Back to Phase 3: Detailed Design 3.5.1.4 Specifying/Annotating In order to properly support development, all possible states of the interface should be depicted in wireframe or comp, or described in detailed specifications. These specifications and annotations are an opportunity to describe the design\u2019s intent beyond what can be conveyed in a static wireframe of visual design comp alone. This typically includes details like dynamic language, how business rules drive presentation, or exact details on how an interaction should function. Requirements High-fidelity wireframes or visual design comps to start from. Product/output Design specifications are most useful when presented side-by-side with the detailed design artifacts (wireframes or comps). Typically, a numbered marker is placed on top of the artifact, that references its respective annotation. Practical considerations In Agile and Lean environments, verbal and collaborative communication is favored to extensive documentation like fully annotated wireframes. Even so, some level of specification is still generally necessary to fully convey the designs for implementation. Resources Wireframing \u2013 The Perfectionist's Guide \u2013 Smashing Magazine","title":"Specifying/annotating"},{"location":"ux/3-5-1-4-annotating/#3514-specifyingannotating","text":"In order to properly support development, all possible states of the interface should be depicted in wireframe or comp, or described in detailed specifications. These specifications and annotations are an opportunity to describe the design\u2019s intent beyond what can be conveyed in a static wireframe of visual design comp alone. This typically includes details like dynamic language, how business rules drive presentation, or exact details on how an interaction should function.","title":"3.5.1.4 Specifying/Annotating"},{"location":"ux/3-5-1-4-annotating/#requirements","text":"High-fidelity wireframes or visual design comps to start from.","title":"Requirements"},{"location":"ux/3-5-1-4-annotating/#productoutput","text":"Design specifications are most useful when presented side-by-side with the detailed design artifacts (wireframes or comps). Typically, a numbered marker is placed on top of the artifact, that references its respective annotation.","title":"Product/output"},{"location":"ux/3-5-1-4-annotating/#practical-considerations","text":"In Agile and Lean environments, verbal and collaborative communication is favored to extensive documentation like fully annotated wireframes. Even so, some level of specification is still generally necessary to fully convey the designs for implementation.","title":"Practical considerations"},{"location":"ux/3-5-1-4-annotating/#resources","text":"Wireframing \u2013 The Perfectionist's Guide \u2013 Smashing Magazine","title":"Resources"},{"location":"ux/3-5-detailed/","text":"3.5 Phase 3: Detailed Design This phase involves building out the conceptual design into fully detailed designs that encompass the entirety of the interfaces and interactions within a given scope of requirements. The final product should be development-ready, including enough specification to explain the how the user may interact with dynamic portions of the designs, and how the designs satisfy their intended requirements or user stories. 3.5.1 Activities for Detailing Designs High-fidelity wireframing and visual design Fully detailed renderings of the system\u2019s relevant interfaces help clearly articulate the system and its capabilities. Prototyping A simulation of the intended presentation and functionality of the system allows user validation prior to committing to build, and demonstrates this intended functionality to the development team. Usability testing Assessing the detailed design at this stage allows the team to more nimbly correct course and enhance the experience prior to development. Specifying/annotating Provide additional details to the development team to explain all of the ways a user can interact with the designs.","title":"3.5 Phase 3: Detailed Design"},{"location":"ux/3-5-detailed/#35-phase-3-detailed-design","text":"This phase involves building out the conceptual design into fully detailed designs that encompass the entirety of the interfaces and interactions within a given scope of requirements. The final product should be development-ready, including enough specification to explain the how the user may interact with dynamic portions of the designs, and how the designs satisfy their intended requirements or user stories.","title":"3.5 Phase 3: Detailed Design"},{"location":"ux/3-5-detailed/#351-activities-for-detailing-designs","text":"","title":"3.5.1 Activities for Detailing Designs"},{"location":"ux/3-5-detailed/#high-fidelity-wireframing-and-visual-design","text":"Fully detailed renderings of the system\u2019s relevant interfaces help clearly articulate the system and its capabilities.","title":"High-fidelity wireframing and visual design"},{"location":"ux/3-5-detailed/#prototyping","text":"A simulation of the intended presentation and functionality of the system allows user validation prior to committing to build, and demonstrates this intended functionality to the development team.","title":"Prototyping"},{"location":"ux/3-5-detailed/#usability-testing","text":"Assessing the detailed design at this stage allows the team to more nimbly correct course and enhance the experience prior to development.","title":"Usability testing"},{"location":"ux/3-5-detailed/#specifyingannotating","text":"Provide additional details to the development team to explain all of the ways a user can interact with the designs.","title":"Specifying/annotating"},{"location":"ux/3-6-support/","text":"3.6 Phase 4: Support User experience involvement should not end at a hand-off to the development team. Continuing to participate in the development, deployment and post-delivery support periods is crucial to ensuring the delivered experience matches the delivered designs and meets stakeholder and end-user expectations. 3.6.1 Activities in Post-Delivery Support Developer communication and design adjustment Collaboration with the development team during build helps cover missed edge cases or ambiguous requirements, and ensures that detailed designs are built as specified. Acceptance testing The product ownership team, including the user experience team, should thoroughly test the built capabilities prior to live deployment. The acceptance criteria collected in user stories serve well as an ad hoc test script. Post-launch, conducting acceptance testing with actual end users serves as another validation of the release\u2019s designs as well as research for future iterations or new additional features.","title":"3.6 Phase 4: Support"},{"location":"ux/3-6-support/#36-phase-4-support","text":"User experience involvement should not end at a hand-off to the development team. Continuing to participate in the development, deployment and post-delivery support periods is crucial to ensuring the delivered experience matches the delivered designs and meets stakeholder and end-user expectations.","title":"3.6 Phase 4: Support"},{"location":"ux/3-6-support/#361-activities-in-post-delivery-support","text":"","title":"3.6.1 Activities in Post-Delivery Support"},{"location":"ux/3-6-support/#developer-communication-and-design-adjustment","text":"Collaboration with the development team during build helps cover missed edge cases or ambiguous requirements, and ensures that detailed designs are built as specified.","title":"Developer communication and design adjustment"},{"location":"ux/3-6-support/#acceptance-testing","text":"The product ownership team, including the user experience team, should thoroughly test the built capabilities prior to live deployment. The acceptance criteria collected in user stories serve well as an ad hoc test script. Post-launch, conducting acceptance testing with actual end users serves as another validation of the release\u2019s designs as well as research for future iterations or new additional features.","title":"Acceptance testing"},{"location":"ux/4-1-introduction/","text":"4.1 Introduction Welcome The visual design section of the BES User Experience Playbook catalogues and describes the best practices of digital visual design, and how they inform logistics information application user experiences. These best practices are illustrated with examples from existing USAF applications, as well as \"hybrid\u201d components where necessary to provide a unique visualization. (This section is just to demo some content that will be here later) Purpose !!!This is not a style guide. This content is intended as a teaching tool, to complement technical documentation from other design and development playbooks. The visualizations are not intended as redesigns of existing or new applications, but rather guidelines for making decisions within the context of your own design systems. When designing specific user interface components, first consult your application\u2019s style guide, then refer to this playbook should any questions remain. This content also exists as a living document. As USAF applications, best practices, and use cases continue to evolve, so too will this document and the examples herein. This is not a style guide. This content is intended as a teaching tool, to complement technical documentation from other design and development playbooks. The visualizations are not intended as redesigns of existing or new applications, but rather guidelines for making decisions within the context of your own design systems. When designing specific user interface components, first consult your application\u2019s style guide, then refer to this playbook should any questions remain. This content also exists as a living document. As USAF applications, best practices, and use cases continue to evolve, so too will this document and the examples herein.","title":"4.1 Introduction"},{"location":"ux/4-1-introduction/#41-introduction","text":"","title":"4.1 Introduction"},{"location":"ux/4-1-introduction/#welcome","text":"The visual design section of the BES User Experience Playbook catalogues and describes the best practices of digital visual design, and how they inform logistics information application user experiences. These best practices are illustrated with examples from existing USAF applications, as well as \"hybrid\u201d components where necessary to provide a unique visualization. (This section is just to demo some content that will be here later)","title":"Welcome"},{"location":"ux/4-1-introduction/#purpose","text":"!!!This is not a style guide. This content is intended as a teaching tool, to complement technical documentation from other design and development playbooks. The visualizations are not intended as redesigns of existing or new applications, but rather guidelines for making decisions within the context of your own design systems. When designing specific user interface components, first consult your application\u2019s style guide, then refer to this playbook should any questions remain. This content also exists as a living document. As USAF applications, best practices, and use cases continue to evolve, so too will this document and the examples herein. This is not a style guide. This content is intended as a teaching tool, to complement technical documentation from other design and development playbooks. The visualizations are not intended as redesigns of existing or new applications, but rather guidelines for making decisions within the context of your own design systems. When designing specific user interface components, first consult your application\u2019s style guide, then refer to this playbook should any questions remain. This content also exists as a living document. As USAF applications, best practices, and use cases continue to evolve, so too will this document and the examples herein.","title":"Purpose"},{"location":"ux/_template/","text":"Back to Phase 3: Detailed Design 3.5.1.1 Interviews When to use Requirements Product/output Practical considerations References & Resources References Additional resources","title":" template"},{"location":"ux/_template/#3511-interviews","text":"","title":"3.5.1.1 Interviews"},{"location":"ux/_template/#when-to-use","text":"","title":"When to use"},{"location":"ux/_template/#requirements","text":"","title":"Requirements"},{"location":"ux/_template/#productoutput","text":"","title":"Product/output"},{"location":"ux/_template/#practical-considerations","text":"","title":"Practical considerations"},{"location":"ux/_template/#references-resources","text":"","title":"References &amp; Resources"},{"location":"ux/_template/#references","text":"","title":"References"},{"location":"ux/_template/#additional-resources","text":"","title":"Additional resources"}]}